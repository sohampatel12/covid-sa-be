{"version":3,"sources":["components/Replies.tsx","components/Results.tsx","components/Analytics.jsx","components/Search.tsx","components/CorpusStats.jsx","components/Misinformation.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["COLORS","Replies","props","React","useState","data","setData","first","setFirst","spinner","setSpinner","show","message","setError","useEffect","url","URL","tweet_id","fetch","toString","method","redirect","then","response","json","result","catch","error","console","log","finally","Grid","container","xs","Box","sx","width","flex","textAlign","mt","CircularProgress","display","chartData","replies","length","count","PieChart","height","Tooltip","Legend","verticalAlign","align","Pie","dataKey","cx","cy","fill","label","map","entry","index","Cell","item","borderBottom","Typography","mb","color","reply_text","id","renderReply","MENTIONS","HASHTAGS","URLS","ExpandMore","styled","expand","other","IconButton","theme","transform","marginLeft","transition","transitions","create","duration","shortest","Results","expanded","setExpanded","showReplies","setShowReplies","createCard","parts","date","Date","tweet_date","dateString","toLocaleDateString","toLocaleTimeString","tweet_text","split","country","i","match","className","target","href","Card","bgcolor","CardHeader","title","name","poi_name","verified","fontSize","subheader","action","onClick","window","open","avatar","Avatar","CardContent","CardActions","sentiment","mx","newShowReplies","handleRepliesClick","splice","handleExpandClick","Collapse","in","timeout","unmountOnExit","numFound","docs","Analytics","createPieChart","Math","PI","labelKey","gutterBottom","language","words","hashtags","options","rotations","rotationAngles","size","Search","inputValue","setInputValue","page","setPage","fetchResults","start","undefined","body","Array","createRequestBody","mode","JSON","stringify","headers","key","languages","push","countries","pois","handlePageChange","event","value","component","flexGrow","p","Toolbar","padding","Autocomplete","freeSolo","onKeyDown","onInputChange","newInputValue","renderInput","params","TextField","Button","variant","Alert","severity","Pagination","ceil","showFirstButton","showLastButton","onChange","marginTop","mentions","renderResults","CorpusStats","require","dates","lang","poisSent","poisSentiment","positive","neutral","negative","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","Line","type","stroke","activeDot","r","BarChart","Bar","stackId","Misinformation","hashtag","setHashtag","neg_tweets","neg_tweets_keys","Object","keys","neg_tweets_count","style","dataSource","rotated","valueField","argumentField","FormControl","fullWidth","InputLabel","Select","labelId","MenuItem","App","screen","setScreen","en","hi","es","setLanguage","setSentiment","USA","India","Mexico","setRegion","SSalud_mx","CDCgov","narendramodi","POTUS","marcorubio","JoeBiden","ShashiTharoor","SenTedCruz","lopezobrador_","SenSchumer","EnriqueAlfaroR","GobiernoMX","alfredodelmazo","osoriochong","AmitShah","Jaime_BonillaV","Claudiashein","ArvindKejriwal","mansukhmandviya","MoHFW_INDIA","RandPaul","HillaryClinton","AyushmanNHA","HLGatell","BarackObama","PMOIndia","DrTedros","KamalaHarris","rashtrapatibhvn","HHSGov","myogiadityanath","SSaludCdMx","dremilyportermd","WHO","GovRonDeSantis","RahulGandhi","VP","MauVila","GovKathyHochul","setPois","handleLanguageChange","checked","handleRegionChange","handlePoisChange","handleSentimentChange","CssBaseline","AppBar","position","zIndex","drawer","Drawer","flexShrink","boxSizing","overflow","List","Divider","ListItem","button","ListItemIcon","ListItemText","primary","Accordion","AccordionSummary","expandIcon","AccordionDetails","m","FormLabel","FormGroup","FormControlLabel","control","Checkbox","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a29f592.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport {\n  Alert,\n  Autocomplete,\n  Box,\n  Button,\n  CircularProgress,\n  Grid,\n  Divider,\n  Pagination,\n  TextField,\n  Toolbar,\n  Typography,\n} from \"@mui/material\";\nimport Results from \"./Results\";\nimport Analytics from \"./Analytics\";\nimport { Legend, Pie, PieChart, Tooltip, Cell } from \"recharts\";\n\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\"];\n\nexport default function Replies(props: any) {\n  const [data, setData] = React.useState<any | undefined>();\n  const [first, setFirst] = React.useState(false);\n  const [spinner, setSpinner] = React.useState(false);\n  const [error, setError] = React.useState({\n    show: false,\n    message: \"\",\n  });\n\n  useEffect(() => {\n    if (!first) {\n      setSpinner(true);\n      const url = new URL(\n        \"http://13.59.1.184:9999/replies?tweet_id=\" + props.tweet_id\n      );\n      fetch(url.toString(), {\n        method: \"GET\",\n        // mode: 'cors',\n        redirect: \"follow\",\n      })\n        .then((response) => response.json())\n        .then((result) => {\n          setData(result);\n        })\n        .catch((error) => {\n          setError({\n            show: true,\n            message: error.toString(),\n          });\n          console.log(error);\n        })\n        .finally(() => {\n          setSpinner(false);\n          setFirst(true);\n        });\n    }\n  }, []);\n\n  const createPieChart = (chartData: any) => {\n    return (\n      <PieChart width={300} height={250}>\n        <Tooltip />\n        <Legend verticalAlign=\"top\" height={24} align=\"right\" />\n        <Pie\n          data={chartData}\n          dataKey=\"value\"\n          cx=\"50%\"\n          cy=\"50%\"\n          fill=\"#8884d8\"\n          label\n        >\n          {chartData.map((entry: any, index: number) => (\n            <Cell\n              key={`cell-${index}-${entry}`}\n              fill={COLORS[index % COLORS.length]}\n            />\n          ))}\n        </Pie>\n      </PieChart>\n    );\n  };\n\n  const showProgress = () => {\n    if (spinner) {\n      return (\n        <Box sx={{ width: \"100%\", flex: 1, textAlign: \"center\", mt: \"50px\" }}>\n          <div>\n            <CircularProgress />\n          </div>\n          <div>Loading</div>\n        </Box>\n      );\n    } else {\n      return <Box sx={{ display: \"flex\" }}></Box>;\n    }\n  };\n\n  const renderReply = () => {\n    console.log(data);\n    if (data && data.replies.length > 0) {\n      return (\n        <>\n          {createPieChart(data?.count)}\n          {data?.replies?.map((item: any, index: number) => {\n            return (\n              <Box sx={{ borderBottom: 1 }}>\n                <Typography sx={{ mb: 1.5 }} color=\"text.primary\" key={item.id}>\n                  {item.reply_text}\n                </Typography>\n              </Box>\n            );\n          })}\n          ;\n        </>\n      );\n    } else if (data && data.replies.length == 0 && !spinner) {\n      return (\n        <Typography sx={{ mb: 1.5 }} color=\"text.primary\">\n          No replies found.\n        </Typography>\n      );\n    }\n  };\n\n  return (\n    <Grid container xs={12}>\n      {showProgress()}\n      {renderReply()}\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { CardContent, Card, CardHeader, Grid, Typography, IconButton, CardActions, styled, IconButtonProps, Collapse, Avatar } from '@mui/material';\nimport ModeCommentIcon from '@mui/icons-material/ModeComment';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport VerifiedIcon from '@mui/icons-material/Verified';\nimport SentimentNeutralIcon from '@mui/icons-material/SentimentNeutral';\nimport SentimentSatisfiedAltIcon from '@mui/icons-material/SentimentSatisfiedAlt';\nimport SentimentVeryDissatisfiedIcon from '@mui/icons-material/SentimentVeryDissatisfied';\nimport Replies from './Replies';\n\nconst MENTIONS = /@([a-z\\d_]+)/ig;\nconst HASHTAGS = /(^|\\s)#(\\w+)/gm;\nconst URLS = /(http|ftp|https):\\/\\/([\\w_-]+(?:(?:\\.[\\w_-]+)+))([\\w.,@?^=%&:\\/~+#-]*[\\w@?^=%&\\/~+#-])/gm;\n\n\ninterface ExpandMoreProps extends IconButtonProps {\n  expand: boolean;\n}\n\nconst ExpandMore = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest,\n  }),\n}));\n\nexport default function Results(props: any) {\n  const [expanded, setExpanded] = React.useState(false);\n  const list = [false, false, false, false, false, false, false, false, false, false]\n  const [showReplies, setShowReplies] = React.useState(list);\n\n  const handleExpandClick = (index: number) => {\n    console.log(\"expand\", expanded, showReplies.splice(0, index));\n    \n    if (showReplies[index]) {\n      let newShowReplies = [...showReplies];\n      newShowReplies[index] = !newShowReplies[index];\n      setShowReplies(newShowReplies);\n    }\n    setExpanded(!expanded);\n  };\n  \n  const handleRepliesClick = (index: number) => {\n    console.log(\"replies\", expanded, showReplies);\n    if (expanded) {\n      setExpanded(!expanded);\n    }\n    let newShowReplies = [...showReplies];\n    newShowReplies[index] = !newShowReplies[index];\n    setShowReplies(newShowReplies);\n  };\n\n  console.log(showReplies);\n\n  function showTweet(id: any) {\n    window.open(\"https://twitter.com/test/status/\" + id.toString());\n  }\n\n  function createCard(item: any, index: number) {\n\n    const date = new Date(item.tweet_date);\n    const dateString = date.toLocaleDateString() + ' ' + date.toLocaleTimeString();\n    var parts;\n    if (item.tweet_text) {\n      parts = item.tweet_text.split(\" \");\n    } else {\n      parts = item.reply_text.split(\" \");\n    }\n    const country = item.country;\n\n    for (let i = 0; i < parts.length; i++) {\n      if (parts[i].match(MENTIONS)) {\n        parts[i] = <span> <a className=\"mention\" target=\"_blank\" key={parts[i] + item.id} href={`http://twitter.com/` + parts[i]}>{parts[i]}</a> </span>;\n      } else if (parts[i].match(HASHTAGS)) {\n        parts[i] = <span> <a className=\"hashtag\" target=\"_blank\" key={parts[i] + item.id} href={`http://twitter.com/` + parts[i]}>{parts[i]}</a> </span>;\n      } else if (parts[i].match(URLS)) {\n        parts[i] = <span> <a className=\"url\" target=\"_blank\" key={parts[i] + item.id} href={parts[i]}>{parts[i]}</a> </span>;\n      } else {\n        parts[i] = <span> {parts[i]} </span>\n      }\n    }\n\n    return (\n      <Card key={item.id} sx={{ mt: 2, bgcolor: 'aliceblue' }} >\n        <CardHeader\n          title={\n            <div>\n              <span> {item.name ? item.name : item.poi_name ? item.poi_name : item.id } </span>\n              {item.verified ? <span> <VerifiedIcon color='success' fontSize='inherit' /> </span> : ''}\n            </div>\n          }\n          subheader={dateString}\n          action={\n            <IconButton aria-label=\"settings\">\n              <OpenInNewIcon onClick={() => showTweet(item.id)} />\n            </IconButton>\n          }\n          avatar={\n            <Avatar aria-label=\"avatar\">{item.name ? item.name[0] : item.poi_name ? item.poi_name[0] : item.id[0] }</Avatar>\n          }\n        />\n        <CardContent>\n          <Typography color=\"text.primary\">\n            {parts}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          {\n            item.sentiment && item.sentiment === \"1\" && (\n              <SentimentSatisfiedAltIcon sx={{ mx: 1, color: \"green\" }}/>\n            )\n          }\n          {\n            item.sentiment && item.sentiment === \"0\" && (\n              <SentimentNeutralIcon sx={{ mx: 1, color: \"grey\" }} />\n            )\n          }\n          {\n            item.sentiment && (item.sentiment === \"2\" || item.sentiment === \"-1\") && (\n              <SentimentVeryDissatisfiedIcon sx={{ mx: 1, color: \"red\" }}/>\n            )\n          }\n          <ExpandMore\n            expand={showReplies[index]}\n            onClick={() => { handleRepliesClick(index) }}\n            aria-expanded={showReplies[index]}\n            aria-label=\"Comments\"\n          >\n            <ModeCommentIcon />\n          </ExpandMore>\n          <ExpandMore\n            expand={expanded}\n            onClick={() => { handleExpandClick(index) }}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </ExpandMore>\n        </CardActions>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Typography>\n              {country ? 'Country: ' + country : ''}\n            </Typography>\n          </CardContent>\n        </Collapse>\n        <Collapse in={showReplies[index]} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Replies tweet_id={item.id}></Replies>\n          </CardContent>\n        </Collapse>\n      </Card>\n    )\n  }\n\n  return (\n    <Grid item xs={12}>\n      About {props.data.response?.numFound} results.\n      {\n        props.data.response?.docs?.map((item: any, index: number) => {\n          return createCard(item, index);\n        })\n      }\n    </Grid>\n  )\n}","import { CardContent, Card, Grid, Typography } from '@mui/material';\nimport { Bar, BarChart, CartesianGrid, Legend, Line, LineChart, Pie, Cell, PieChart, Tooltip, XAxis, YAxis } from 'recharts';\nimport ReactWordcloud from 'react-wordcloud';\n\nexport default function Analytics(props) {\n\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28'];\n  const RADIAN = Math.PI / 180;\n  const options = {\n    rotations: 1,\n    rotationAngles: [0],\n  };\n  const size = [600, 300];\n\n  const createPieChart = (chartData) => {\n    return (\n      <PieChart width={500} height={250}>\n        <Tooltip />\n        <Legend verticalAlign=\"top\" height={24} align=\"right\" />\n        <Pie data={chartData} dataKey=\"value\" cx=\"50%\" cy=\"50%\" fill=\"#8884d8\" label labelKey=\"name\">\n          {chartData.map((entry, index) => (\n            <Cell key={`cell-${index}-${entry}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n      </PieChart>\n    )\n  }\n\n  return (\n    <Grid item xs={12}>\n      Result analytics\n      <Card sx={{ mt: 2, bgcolor: 'ghostwhite' }}>\n        <CardContent>\n          <Typography sx={{ fontSize: 14 }} color=\"text.primary\" gutterBottom>\n            Country wise division\n          </Typography>\n          {createPieChart(props.country)}\n        </CardContent>\n      </Card>\n      <Card sx={{ mt: 2, bgcolor: 'ghostwhite' }}>\n        <CardContent>\n          <Typography sx={{ fontSize: 14 }} color=\"text.primary\" gutterBottom>\n            Language wise division\n          </Typography>\n          {createPieChart(props.language)}\n        </CardContent>\n      </Card>\n      <Card sx={{ mt: 2, bgcolor: 'ghostwhite' }}>\n        <CardContent>\n          <Typography sx={{ fontSize: 14 }} color=\"text.primary\" gutterBottom>\n            Sentiment wise division\n          </Typography>\n          {createPieChart(props.sentiment)}\n        </CardContent>\n      </Card>\n      <Card sx={{ mt: 2, bgcolor: 'ghostwhite' }}>\n        <CardContent>\n          <Typography sx={{ fontSize: 14 }} color=\"text.primary\" gutterBottom>\n            Hashtags word cloud\n          </Typography>\n          <ReactWordcloud words={props.hashtags} options={options} size={size} />\n        </CardContent>\n      </Card>\n    </Grid>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { Alert, Autocomplete, Box, Button, CircularProgress, Grid, Pagination, TextField, Toolbar, Typography } from '@mui/material';\nimport Results from './Results';\nimport Analytics from './Analytics.jsx';\n\n\nexport default function Search(props: any) {\n  const [value, setValue] = React.useState(\"\");\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [data, setData] = React.useState<any | undefined>();\n  const [spinner, setSpinner] = React.useState(false);\n  const [page, setPage] = React.useState(1);\n  const [error, setError] = React.useState({\n    show: false,\n    message: \"\"\n  });\n\n  const sample: any[] = [];\n\n  const fetchResults = () => {\n    const start = page ? ((page - 1) * 10).toString() : \"0\"\n    console.log(start);\n\n    setData(undefined);\n    setSpinner(true);\n    setError({ ...error, show: false });\n\n    if (!inputValue) {\n      setSpinner(false);\n      console.log(\"Enter some details\");\n    } else {\n      const url = new URL(\"http://13.59.1.184:9999/api\");\n      const headers = {\n        'Content-Type': 'application/json'\n      }\n      const body = {\n        \"query\": inputValue,\n        \"start\": start ? start.toString() : \"0\",\n        \"pois\": Array(),\n        \"countries\": Array(),\n        \"languages\": Array(),\n        \"sentiment\": Array()\n      }\n      createRequestBody(body);\n\n      fetch(url.toString(), {\n        method: 'POST',\n        mode: 'cors',\n        redirect: 'follow',\n        body: JSON.stringify(body),\n        headers: headers\n      })\n        .then(response => response.json())\n        .then(result => {\n          setData(result);\n        })\n        .catch(error => {\n          setError({\n            show: true,\n            message: error.toString()\n          });\n          console.log(error);\n        })\n        .finally(() => {\n          setSpinner(false);\n        });\n    }\n  }\n\n  const createRequestBody = (body: any) => {\n    for (let key in props.languages) {\n      if (props.languages[key]) {\n        body.languages.push(key)\n      }\n    }\n    for (let key in props.countries) {\n      if (props.countries[key]) {\n        body.countries.push(key)\n      }\n    }\n    for (let key in props.pois) {\n      if (props.pois[key]) {\n        body.pois.push(key)\n      }\n    }\n    for (let key in props.sentiment) {\n      if (key == \"positive\" && props.sentiment[key] == true) {\n        body.sentiment.push(\"1\");\n      }\n      if (key == \"neutral\" && props.sentiment[key] == true) {\n        body.sentiment.push(\"0\");\n      }\n      if (key == \"negative\" && props.sentiment[key] == true) {\n        // body.sentiment.push(\"-1\");\n        body.sentiment.push(\"2\");\n      }\n    }\n  }\n\n  const handleKeyDown = (event: any) => {\n    if (event.key === \"Enter\") {\n      fetchResults();\n    }\n  }\n\n  useEffect(() => {\n    fetchResults();\n  }, [page])\n\n  const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\n    setPage(value);\n  }\n\n  const showProgress = () => {\n    if (spinner) {\n      return (\n        <Box sx={{ width: '100%', flex: 1, textAlign: 'center', mt: '200px' }}>\n          <div><CircularProgress /></div>\n          <div>Loading</div>\n        </Box>\n      )\n    } else {\n      return (\n        <Box sx={{ display: 'flex' }}>\n        </Box>\n      )\n    }\n  }\n\n  const renderError = () => {\n    if (error.show) {\n      return (\n        <Alert sx={{ mx: 2 }} severity=\"error\">{error.message}</Alert>\n      )\n    } else {\n      return (\n        <div></div>\n      )\n    }\n  }\n\n  const renderResults = () => {\n    if (data) {\n\n      return (\n        <Grid container xs={12}>\n          <Grid item padding={2} xs={6}>\n            <Results data={data}></Results>\n            <Pagination\n              count={Math.ceil(data?.response?.numFound / 10)}\n              showFirstButton\n              showLastButton\n              color=\"primary\"\n              page={page}\n              onChange={handlePageChange}\n              sx={{ marginLeft: \"25%\", marginTop: \"24px\" }} />\n          </Grid>\n          <Grid item padding={2} xs={6} sx={{ bgcolor: \"primary.disabled\" }}>\n            <Analytics\n              language={data.language}\n              country={data.country}\n              hashtags={data.hashtags}\n              mentions={data.mentions}\n              sentiment={data.sentiment}\n            ></Analytics>\n          </Grid>\n        </Grid>\n\n      );\n    } else if (!spinner && !data && !error.show) {\n      return (\n        <Grid container xs={12}>\n          <Typography padding={2}>Begin search to see results.</Typography>\n        </Grid>\n      );\n    }\n  }\n\n  return (\n    <Box component=\"main\" sx={{ flexGrow: 1, p: 0 }}>\n      <Toolbar />\n      <Grid container xs={12}>\n        <Grid item padding={2} xs={4}>\n          <Autocomplete\n            freeSolo\n            id=\"combo-box-demo\"\n            options={sample}\n            onKeyDown={handleKeyDown}\n            onInputChange={(event, newInputValue) => {\n              setInputValue(newInputValue);\n            }}\n            sx={{ width: '100%' }}\n            renderInput={(params) => <TextField {...params} label=\"Search\" />}\n          />\n        </Grid>\n        <Grid item padding={2} xs={1.5}>\n          <Button variant=\"contained\" sx={{ width: '100%', height: '100%' }} onClick={() => { fetchResults() }}>\n            Search\n          </Button>\n        </Grid>\n        <Grid item padding={2} xs={6.5}></Grid>\n        {renderError()}\n        {renderResults()}\n      </Grid>\n      {showProgress()}\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  CircularProgress,\n  Grid,\n  Toolbar,\n  Typography,\n} from \"@mui/material\";\nimport {\n  Cell,\n  Legend,\n  Pie,\n  PieChart,\n  Tooltip,\n  LineChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Line,\n  BarChart,\n  Bar,\n} from \"recharts\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport ReactWordcloud from \"react-wordcloud\";\n\nexport default function CorpusStats(props) {\n  const country = require(\"./static_country.json\");\n  const dates = require(\"./static_dates.json\");\n  const hashtags = require(\"./static_hashtags.json\");\n  const lang = require(\"./static_lang.json\");\n  const mentions = require(\"./static_mentions.json\");\n  const poisSent = require(\"./static_poi_sent.json\");\n  const poisSentiment = [];\n  const pois = require(\"./static_pois.json\");\n  const sentiment = require(\"./static_sentiment.json\");\n\n  const COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\"];\n  const RADIAN = Math.PI / 180;\n  const options = {\n    rotations: 1,\n    rotationAngles: [0],\n  };\n  const size = [500, 200];\n\n  for (let key in poisSent) {\n    poisSentiment.push({\n      name: key,\n      positive: poisSent[key][\"Positive\"],\n      neutral: poisSent[key][\"Neutral\"],\n      negative: poisSent[key][\"Negative\"],\n    });\n  }\n\n  const createPieChart = (chartData) => {\n    return (\n      <PieChart width={500} height={250}>\n        <Tooltip />\n        <Legend verticalAlign=\"top\" height={24} align=\"right\" />\n        <Pie\n          data={chartData}\n          dataKey=\"value\"\n          cx=\"50%\"\n          cy=\"50%\"\n          fill=\"#8884d8\"\n          label\n        >\n          {chartData.map((entry, index) => (\n            <Cell\n              key={`cell-${index}-${entry}`}\n              fill={COLORS[index % COLORS.length]}\n            />\n          ))}\n        </Pie>\n      </PieChart>\n    );\n  };\n\n  return (\n    <Box component=\"main\" sx={{ flexGrow: 1, p: 0 }}>\n      <Toolbar />\n      <Grid container xs={12}>\n        <Grid item padding={2} xs={6}>\n          <Card sx={{ mt: 1, bgcolor: \"ghostwhite\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 14 }}\n                color=\"text.primary\"\n                gutterBottom\n              >\n                Country wise division\n              </Typography>\n              {createPieChart(country)}\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item padding={2} xs={6}>\n          <Card sx={{ mt: 1, bgcolor: \"ghostwhite\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 14 }}\n                color=\"text.primary\"\n                gutterBottom\n              >\n                Language wise division\n              </Typography>\n              {createPieChart(lang)}\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item padding={2} xs={6}>\n          <Card sx={{ mt: 1, bgcolor: \"ghostwhite\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 14 }}\n                color=\"text.primary\"\n                gutterBottom\n              >\n                Sentiment wise division\n              </Typography>\n              {createPieChart(sentiment)}\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item padding={2} xs={6}>\n          <Card sx={{ mt: 1, bgcolor: \"ghostwhite\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 14 }}\n                color=\"text.primary\"\n                gutterBottom\n              >\n                Hashtag cloud\n              </Typography>\n              <ReactWordcloud words={hashtags} options={options} size={size} />\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item padding={2} xs={6}>\n          <Card sx={{ mt: 1, bgcolor: \"ghostwhite\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 14 }}\n                color=\"text.primary\"\n                gutterBottom\n              >\n                POIs\n              </Typography>\n              <ReactWordcloud words={mentions} options={options} size={size} />\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item padding={2} xs={6}>\n          <Card sx={{ mt: 1, bgcolor: \"ghostwhite\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 14 }}\n                color=\"text.primary\"\n                gutterBottom\n              >\n                Sentiment wise division\n              </Typography>\n              {createPieChart(sentiment)}\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item padding={2} xs={12}>\n          <Card sx={{ mt: 1, bgcolor: \"ghostwhite\" }}>\n            <CardContent>\n              <LineChart\n                width={1000}\n                height={300}\n                data={dates}\n                margin={{\n                  top: 5,\n                  right: 30,\n                  left: 20,\n                  bottom: 5,\n                }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis dataKey=\"value\" height=\"200\" />\n                <Tooltip />\n                <Legend />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"value\"\n                  stroke=\"#8884d8\"\n                  activeDot={{ r: 8 }}\n                />\n              </LineChart>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item padding={2} xs={12}>\n          <Card sx={{ mt: 1, bgcolor: \"ghostwhite\" }}>\n            <CardContent>\n              <BarChart\n                width={1100}\n                height={300}\n                data={poisSentiment}\n                margin={{\n                  top: 20,\n                  right: 30,\n                  left: 20,\n                  bottom: 5,\n                }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"positive\" stackId=\"a\" fill=\"#82ca9d\" />\n                <Bar dataKey=\"neutral\" stackId=\"a\" fill=\"#808080\" />\n                <Bar dataKey=\"negative\" stackId=\"a\" fill=\"#AA4A44\" />\n              </BarChart>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport {\n  CardContent,\n  Card,\n  Box,\n  CircularProgress,\n  styled,\n  Toolbar,\n  IconButtonProps,\n  CardHeader,\n  Grid,\n  Typography,\n  IconButton,\n  CardActions,\n  Collapse,\n  Avatar,\n} from \"@mui/material\";\nimport { Chart, Series, AdaptiveLayout } from \"devextreme-react/chart\";\nimport ModeCommentIcon from \"@mui/icons-material/ModeComment\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport OpenInNewIcon from \"@mui/icons-material/OpenInNew\";\nimport VerifiedIcon from \"@mui/icons-material/Verified\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Replies from \"./Replies\";\nimport Results from \"./Results\";\nimport Analytics from \"./Analytics.jsx\";\n\nconst MENTIONS = /@([a-z\\d_]+)/gi;\nconst HASHTAGS = /(^|\\s)#(\\w+)/gm;\nconst URLS =\n  /(http|ftp|https):\\/\\/([\\w_-]+(?:(?:\\.[\\w_-]+)+))([\\w.,@?^=%&:\\/~+#-]*[\\w@?^=%&\\/~+#-])/gm;\n\ninterface ExpandMoreProps extends IconButtonProps {\n  expand: boolean;\n}\n\nconst ExpandMore = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? \"rotate(0deg)\" : \"rotate(180deg)\",\n  marginLeft: \"auto\",\n  transition: theme.transitions.create(\"transform\", {\n    duration: theme.transitions.duration.shortest,\n  }),\n}));\n\nexport default function Misinformation(props: any) {\n  const [value, setValue] = React.useState(\"\");\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [data, setData] = React.useState<any | undefined>();\n  const [spinner, setSpinner] = React.useState(false);\n  const [expanded, setExpanded] = React.useState(0);\n  const list = [false, false, false, false, false, false, false, false, false, false]\n  const [showReplies, setShowReplies] = React.useState(list);\n  const [page, setPage] = React.useState(1);\n  const [hashtag, setHashtag] = React.useState(\"\");\n\n  const [error, setError] = React.useState({\n    show: false,\n    message: \"\",\n  });\n\n  const neg_tweets = require(\"./negative_tweets.json\");\n\n  console.log(neg_tweets, \"tweets\");\n\n  const neg_tweets_keys = Object.keys(neg_tweets);\n\n  let obj = {};\n\n  const neg_tweets_count = require(\"./negative_tweet_count.json\");\n\n  console.log(neg_tweets_count, \"values\");\n\n  const COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\"];\n  const RADIAN = Math.PI / 180;\n  const options = {\n    rotations: 1,\n    rotationAngles: [0],\n  };\n  const size = [600, 300];\n\n  const handleChange = (event: any) => {\n    setHashtag(event.target.value);\n  };\n\n  const handleExpandClick = (index: number) => {\n    if (showReplies[index]) {\n      let newShowReplies = [...showReplies];\n      newShowReplies[index] = !newShowReplies[index];\n      setShowReplies(newShowReplies);\n    }\n    setExpanded(index);\n  };\n\n  const handleRepliesClick = (index: number) => {\n    if (expanded !== 0) {\n      setExpanded(0);\n    }\n    let newShowReplies = [...showReplies];\n    newShowReplies[index] = !newShowReplies[index];\n    setShowReplies(newShowReplies);\n  };\n\n  const showTweet = (id: any) => {\n    window.open(\"https://twitter.com/test/status/\" + id.toString());\n  };\n\n  const fetchResults = () => {\n    const start = page ? ((page - 1) * 10).toString() : \"0\";\n    setData(undefined);\n    setSpinner(true);\n    setError({ ...error, show: false });\n\n    if (!inputValue) {\n      setSpinner(false);\n      console.log(\"Enter some details\");\n    } else {\n      const url = new URL(\"http://13.59.1.184:9999/api\");\n      const headers = {\n        \"Content-Type\": \"application/json\",\n      };\n      const body = {\n        query: inputValue,\n        start: start ? start.toString() : \"0\",\n        pois: Array(),\n        countries: Array(),\n        languages: Array(),\n      };\n\n      fetch(url.toString(), {\n        method: \"GET\",\n        mode: \"cors\",\n        redirect: \"follow\",\n        headers: headers,\n      })\n        .then((response) => response.json())\n        .then((result) => {\n          setData(result);\n        })\n        .catch((error) => {\n          setError({\n            show: true,\n            message: error.toString(),\n          });\n          console.log(error);\n        })\n        .finally(() => {\n          setSpinner(false);\n        });\n    }\n  };\n\n  const showProgress = () => {\n    if (spinner) {\n      return (\n        <Box sx={{ width: \"100%\", flex: 1, textAlign: \"center\", mt: \"200px\" }}>\n          <div>\n            <CircularProgress />\n          </div>\n          <div>Loading</div>\n        </Box>\n      );\n    } else {\n      return <Box sx={{ display: \"flex\" }}></Box>;\n    }\n  };\n\n  return (\n    <Box component=\"main\" sx={{ flexGrow: 1, p: 0 }}>\n      <Toolbar />\n      <Chart\n        id=\"chart\"\n        style={{ margin: 20 }}\n        dataSource={neg_tweets_count}\n        rotated={true}\n      >\n        <Series\n          valueField=\"value\"\n          argumentField=\"name\"\n          name=\"Hashtags\"\n          type=\"bar\"\n          color=\"#ffaa66\"\n        />\n      </Chart>\n\n      <Grid container xs={12}>\n        <FormControl fullWidth>\n          <InputLabel id=\"demo-simple-select-label\">Hashtags</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={hashtag}\n            label=\"Hashtags\"\n            onChange={handleChange}\n          >\n            {neg_tweets_keys.map((index: any) => {\n              return <MenuItem value={index}>{index}</MenuItem>;\n            })}\n          </Select>\n        </FormControl>\n        <Grid item padding={2} xs={6}>\n          {neg_tweets[hashtag]?.map((index: any, key: number) => {\n            const date = new Date(index.tweet_date);\n            const dateString =\n              date.toLocaleDateString() + \" \" + date.toLocaleTimeString();\n            var parts;\n            if (index.tweet_text) {\n              parts = index.tweet_text.split(\" \");\n            } else {\n              parts = index.reply_text.split(\" \");\n            }\n            const country = index.country;\n\n            for (let i = 0; i < parts.length; i++) {\n              if (parts[i].match(MENTIONS)) {\n                parts[i] = (\n                  <span>\n                    {\" \"}\n                    <a\n                      className=\"mention\"\n                      target=\"_blank\"\n                      key={parts[i] + index.id}\n                      href={`http://twitter.com/` + parts[i]}\n                    >\n                      {parts[i]}\n                    </a>{\" \"}\n                  </span>\n                );\n              } else if (parts[i].match(HASHTAGS)) {\n                parts[i] = (\n                  <span>\n                    {\" \"}\n                    <a\n                      className=\"hashtag\"\n                      target=\"_blank\"\n                      key={parts[i] + index.id}\n                      href={`http://twitter.com/` + parts[i]}\n                    >\n                      {parts[i]}\n                    </a>{\" \"}\n                  </span>\n                );\n              } else if (parts[i].match(URLS)) {\n                parts[i] = (\n                  <span>\n                    {\" \"}\n                    <a\n                      className=\"url\"\n                      target=\"_blank\"\n                      key={parts[i] + index.id}\n                      href={parts[i]}\n                    >\n                      {parts[i]}\n                    </a>{\" \"}\n                  </span>\n                );\n              } else {\n                parts[i] = <span> {parts[i]} </span>;\n              }\n            }\n            return (\n              <Card key={index.id} sx={{ mt: 2, bgcolor: \"aliceblue\" }}>\n                <CardHeader\n                  title={\n                    <div>\n                      <span>\n                        {\" \"}\n                        {index.name\n                          ? index.name\n                          : index.poi_name\n                          ? index.poi_name\n                          : index.id}{\" \"}\n                      </span>\n                      {index.verified ? (\n                        <span>\n                          {\" \"}\n                          <VerifiedIcon\n                            color=\"success\"\n                            fontSize=\"inherit\"\n                          />{\" \"}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </div>\n                  }\n                  subheader={dateString}\n                  action={\n                    <IconButton aria-label=\"settings\">\n                      <OpenInNewIcon onClick={() => showTweet(index.id)} />\n                    </IconButton>\n                  }\n                  avatar={\n                    <Avatar aria-label=\"avatar\">\n                      {index.name\n                        ? index.name[0]\n                        : index.poi_name\n                        ? index.poi_name[0]\n                        : index.id[0]}\n                    </Avatar>\n                  }\n                />\n                <CardContent>\n                  <Typography color=\"text.primary\">{parts}</Typography>\n                </CardContent>\n                <CardActions>\n                  <ExpandMore\n                    expand={showReplies[key]}\n                    onClick={() => {\n                      handleRepliesClick(key);\n                    }}\n                    aria-expanded={showReplies[key]}\n                    aria-label=\"Comments\"\n                  >\n                    <ModeCommentIcon />\n                  </ExpandMore>\n                  <ExpandMore\n                    expand={expanded === key}\n                    onClick={() => {\n                      handleExpandClick(key);\n                    }}\n                    aria-expanded={expanded === key}\n                    aria-label=\"show more\"\n                  >\n                    <ExpandMoreIcon />\n                  </ExpandMore>\n                </CardActions>\n                <Collapse in={expanded === key} timeout=\"auto\" unmountOnExit>\n                  <CardContent>\n                    <Typography>\n                      {country ? \"Country: \" + country : \"\"}\n                    </Typography>\n                  </CardContent>\n                </Collapse>\n                <Collapse in={showReplies[key]} timeout=\"auto\" unmountOnExit>\n                  <CardContent>\n                    <Replies tweet_id={index.id}></Replies>\n                  </CardContent>\n                </Collapse>\n              </Card>\n            );\n          })}\n        </Grid>\n      </Grid>\n      {showProgress()}\n    </Box>\n  );\n}\n","import React from 'react';\nimport { Accordion, AccordionDetails, AccordionSummary, AppBar, Box, Checkbox, CssBaseline, Divider, Drawer, FormControl, FormControlLabel, FormGroup, FormLabel, List, ListItem, ListItemIcon, ListItemText, Toolbar, Typography } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport QueryStatsIcon from '@mui/icons-material/QueryStats';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport './App.css';\nimport Search from './components/Search';\nimport CorpusStats from './components/CorpusStats';\nimport Misinformation from './components/Misinformation';\nimport { useEffect } from 'react';\n\nconst drawerWidth = 300;\n\nexport default function App() {\n\n  const [screen, setScreen] = React.useState(0);\n\n  console.log(screen, 'screen');\n\n\n  const [languages, setLanguage] = React.useState({\n    en: false,\n    hi: false,\n    es: false,\n  });\n  const [sentiment, setSentiment] = React.useState({\n    positive: false,\n    neutral: false,\n    negative: false,\n  });\n  const [countries, setRegion] = React.useState({\n    USA: false,\n    India: false,\n    Mexico: false\n  });\n  const [pois, setPois] = React.useState({\n    SSalud_mx: false,\n    CDCgov: false,\n    narendramodi: false,\n    POTUS: false,\n    marcorubio: false,\n    JoeBiden: false,\n    ShashiTharoor: false,\n    SenTedCruz: false,\n    lopezobrador_: false,\n    SenSchumer: false,\n    EnriqueAlfaroR: false,\n    GobiernoMX: false,\n    alfredodelmazo: false,\n    osoriochong: false,\n    AmitShah: false,\n    Jaime_BonillaV: false,\n    Claudiashein: false,\n    ArvindKejriwal: false,\n    mansukhmandviya: false,\n    MoHFW_INDIA: false,\n    RandPaul: false,\n    HillaryClinton: false,\n    AyushmanNHA: false,\n    HLGatell: false,\n    BarackObama: false,\n    PMOIndia: false,\n    DrTedros: false,\n    KamalaHarris: false,\n    rashtrapatibhvn: false,\n    HHSGov: false,\n    myogiadityanath: false,\n    SSaludCdMx: false,\n    dremilyportermd: false,\n    WHO: false,\n    GovRonDeSantis: false,\n    RahulGandhi: false,\n    VP: false,\n    MauVila: false,\n    GovKathyHochul: false,\n  });\n\n  const poisList = [\"SSalud_mx\",\n    \"CDCgov\",\n    \"narendramodi\",\n    \"POTUS\",\n    \"marcorubio\",\n    \"JoeBiden\",\n    \"ShashiTharoor\",\n    \"SenTedCruz\",\n    \"lopezobrador_\",\n    \"SenSchumer\",\n    \"EnriqueAlfaroR\",\n    \"GobiernoMX\",\n    \"alfredodelmazo\",\n    \"osoriochong\",\n    \"AmitShah\",\n    \"Jaime_BonillaV\",\n    \"Claudiashein\",\n    \"ArvindKejriwal\",\n    \"mansukhmandviya\",\n    \"MoHFW_INDIA\",\n    \"RandPaul\",\n    \"HillaryClinton\",\n    \"AyushmanNHA\",\n    \"HLGatell\",\n    \"BarackObama\",\n    \"PMOIndia\",\n    \"DrTedros\",\n    \"KamalaHarris\",\n    \"rashtrapatibhvn\",\n    \"HHSGov\",\n    \"myogiadityanath\",\n    \"SSaludCdMx\",\n    \"dremilyportermd\",\n    \"WHO\",\n    \"GovRonDeSantis\",\n    \"RahulGandhi\",\n    \"VP\",\n    \"MauVila\",\n    \"GovKathyHochul\"];\n\n  const handleLanguageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setLanguage({\n      ...languages,\n      [event.target.name]: event.target.checked,\n    })\n  };\n\n  const handleRegionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRegion({\n      ...countries,\n      [event.target.name]: event.target.checked,\n    })\n  };\n\n  const handlePoisChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPois({\n      ...pois,\n      [event.target.name]: event.target.checked,\n    })\n  };\n\n  const handleSentimentChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSentiment({\n      ...sentiment,\n      [event.target.name]: event.target.checked,\n    })\n  };\n\n  const handleScreenChange = (num: number) => {\n    setScreen(num);\n  }\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}>\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            COVID Sentiment Analysis\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        variant=\"permanent\"\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box' },\n        }}\n      >\n        <Toolbar />\n        <Box sx={{ overflow: 'auto' }}>\n          <List>\n            <Divider />\n            <Divider />\n            <ListItem button key={\"search\"} onClick={() => { handleScreenChange(0) }}>\n              <ListItemIcon>\n                <SearchIcon />\n              </ListItemIcon>\n              <ListItemText primary={\"Search tweets\"} />\n            </ListItem>\n            <ListItem>\n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                >\n                  <Typography>Language</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <FormControl sx={{ m: 1 }} component=\"fieldset\" variant=\"standard\" fullWidth>\n                    <FormLabel component=\"legend\"></FormLabel>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={languages.en} onChange={handleLanguageChange} name=\"en\" />\n                        }\n                        label=\"English\"\n                      />\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={languages.hi} onChange={handleLanguageChange} name=\"hi\" />\n                        }\n                        label=\"Hindi\"\n                      />\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={languages.es} onChange={handleLanguageChange} name=\"es\" />\n                        }\n                        label=\"Spanish\"\n                      />\n                    </FormGroup>\n                  </FormControl>\n                </AccordionDetails>\n              </Accordion>\n            </ListItem>\n            <ListItem>\n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                >\n                  <Typography>Region</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <FormControl sx={{ m: 1 }} component=\"fieldset\" variant=\"standard\">\n                    <FormLabel component=\"legend\"></FormLabel>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={countries.USA} onChange={handleRegionChange} name=\"USA\" />\n                        }\n                        label=\"USA\"\n                      />\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={countries.India} onChange={handleRegionChange} name=\"India\" />\n                        }\n                        label=\"India\"\n                      />\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={countries.Mexico} onChange={handleRegionChange} name=\"Mexico\" />\n                        }\n                        label=\"Mexico\"\n                      />\n                    </FormGroup>\n                  </FormControl>\n                </AccordionDetails>\n              </Accordion>\n            </ListItem>\n            <ListItem>\n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                >\n                  <Typography>Person of Interest</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <FormControl sx={{ m: 1 }} component=\"fieldset\" variant=\"standard\">\n                    <FormLabel component=\"legend\"></FormLabel>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.AmitShah} onChange={handlePoisChange} name=\"AmitShah\" />\n                        }\n                        label=\"AmitShah\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.ArvindKejriwal} onChange={handlePoisChange} name=\"ArvindKejriwal\" />\n                        }\n                        label=\"ArvindKejriwal\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.AyushmanNHA} onChange={handlePoisChange} name=\"AyushmanNHA\" />\n                        }\n                        label=\"AyushmanNHA\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.BarackObama} onChange={handlePoisChange} name=\"BarackObama\" />\n                        }\n                        label=\"BarackObama\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.CDCgov} onChange={handlePoisChange} name=\"CDCgov\" />\n                        }\n                        label=\"CDCgov\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.Claudiashein} onChange={handlePoisChange} name=\"Claudiashein\" />\n                        }\n                        label=\"Claudiashein\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.DrTedros} onChange={handlePoisChange} name=\"DrTedros\" />\n                        }\n                        label=\"DrTedros\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.EnriqueAlfaroR} onChange={handlePoisChange} name=\"EnriqueAlfaroR\" />\n                        }\n                        label=\"EnriqueAlfaroR\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.GobiernoMX} onChange={handlePoisChange} name=\"GobiernoMX\" />\n                        }\n                        label=\"GobiernoMX\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.GovKathyHochul} onChange={handlePoisChange} name=\"GovKathyHochul\" />\n                        }\n                        label=\"GovKathyHochul\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.GovRonDeSantis} onChange={handlePoisChange} name=\"GovRonDeSantis\" />\n                        }\n                        label=\"GovRonDeSantis\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.HHSGov} onChange={handlePoisChange} name=\"HHSGov\" />\n                        }\n                        label=\"HHSGov\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.HLGatell} onChange={handlePoisChange} name=\"HLGatell\" />\n                        }\n                        label=\"HLGatell\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.HillaryClinton} onChange={handlePoisChange} name=\"HillaryClinton\" />\n                        }\n                        label=\"HillaryClinton\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.Jaime_BonillaV} onChange={handlePoisChange} name=\"Jaime_BonillaV\" />\n                        }\n                        label=\"Jaime_BonillaV\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.JoeBiden} onChange={handlePoisChange} name=\"JoeBiden\" />\n                        }\n                        label=\"JoeBiden\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.KamalaHarris} onChange={handlePoisChange} name=\"KamalaHarris\" />\n                        }\n                        label=\"KamalaHarris\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.MauVila} onChange={handlePoisChange} name=\"MauVila\" />\n                        }\n                        label=\"MauVila\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.MoHFW_INDIA} onChange={handlePoisChange} name=\"MoHFW_INDIA\" />\n                        }\n                        label=\"MoHFW_INDIA\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.PMOIndia} onChange={handlePoisChange} name=\"PMOIndia\" />\n                        }\n                        label=\"PMOIndia\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.POTUS} onChange={handlePoisChange} name=\"POTUS\" />\n                        }\n                        label=\"POTUS\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.RahulGandhi} onChange={handlePoisChange} name=\"RahulGandhi\" />\n                        }\n                        label=\"RahulGandhi\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.RandPaul} onChange={handlePoisChange} name=\"RandPaul\" />\n                        }\n                        label=\"RandPaul\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.SSaludCdMx} onChange={handlePoisChange} name=\"SSaludCdMx\" />\n                        }\n                        label=\"SSaludCdMx\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.SSalud_mx} onChange={handlePoisChange} name=\"SSalud_mx\" />\n                        }\n                        label=\"SSalud_mx\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.SenSchumer} onChange={handlePoisChange} name=\"SenSchumer\" />\n                        }\n                        label=\"SenSchumer\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.SenTedCruz} onChange={handlePoisChange} name=\"SenTedCruz\" />\n                        }\n                        label=\"SenTedCruz\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.ShashiTharoor} onChange={handlePoisChange} name=\"ShashiTharoor\" />\n                        }\n                        label=\"ShashiTharoor\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.VP} onChange={handlePoisChange} name=\"VP\" />\n                        }\n                        label=\"VP\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.WHO} onChange={handlePoisChange} name=\"WHO\" />\n                        }\n                        label=\"WHO\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.alfredodelmazo} onChange={handlePoisChange} name=\"alfredodelmazo\" />\n                        }\n                        label=\"alfredodelmazo\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.dremilyportermd} onChange={handlePoisChange} name=\"dremilyportermd\" />\n                        }\n                        label=\"dremilyportermd\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.lopezobrador_} onChange={handlePoisChange} name=\"lopezobrador_\" />\n                        }\n                        label=\"lopezobrador_\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.mansukhmandviya} onChange={handlePoisChange} name=\"mansukhmandviya\" />\n                        }\n                        label=\"mansukhmandviya\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.marcorubio} onChange={handlePoisChange} name=\"marcorubio\" />\n                        }\n                        label=\"marcorubio\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.myogiadityanath} onChange={handlePoisChange} name=\"myogiadityanath\" />\n                        }\n                        label=\"myogiadityanath\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.narendramodi} onChange={handlePoisChange} name=\"narendramodi\" />\n                        }\n                        label=\"narendramodi\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.osoriochong} onChange={handlePoisChange} name=\"osoriochong\" />\n                        }\n                        label=\"osoriochong\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={pois.rashtrapatibhvn} onChange={handlePoisChange} name=\"rashtrapatibhvn\" />\n                        }\n                        label=\"rashtrapatibhvn\"\n                      />\n                    </FormGroup>\n\n                  </FormControl>\n                </AccordionDetails>\n              </Accordion>\n            </ListItem>\n            <ListItem>\n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                >\n                  <Typography>Sentiment</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <FormControl sx={{ m: 1 }} component=\"fieldset\" variant=\"standard\">\n                    <FormLabel component=\"legend\"></FormLabel>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={sentiment.positive} onChange={handleSentimentChange} name=\"positive\" />\n                        }\n                        label=\"Positive\"\n                      />\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={sentiment.neutral} onChange={handleSentimentChange} name=\"neutral\" />\n                        }\n                        label=\"Neutral\"\n                      />\n                      <FormControlLabel\n                        control={\n                          <Checkbox checked={sentiment.negative} onChange={handleSentimentChange} name=\"negative\" />\n                        }\n                        label=\"Negative\"\n                      />\n                    </FormGroup>\n                  </FormControl>\n                </AccordionDetails>\n              </Accordion>\n            </ListItem>\n            <Divider />\n            <Divider />\n            <ListItem button key={\"stats\"}>\n              <ListItemIcon>\n                <QueryStatsIcon />\n              </ListItemIcon>\n              <ListItemText onClick={() => setScreen(1)} primary={\"Corpus stats\"} />\n            </ListItem>\n            <Divider />\n            <Divider />\n\n            <ListItem button key={\"hesitancy\"}>\n              <ListItemIcon>\n                <QueryStatsIcon />\n              </ListItemIcon>\n              <ListItemText onClick={() => setScreen(2)} primary={\"Misinformation\"} />\n            </ListItem>\n            <Divider />\n            <Divider />\n          </List>\n        </Box>\n      </Drawer>\n\n\n      {screen === 0 && (\n        <Search\n          languages={languages}\n          countries={countries}\n          pois={pois}\n          sentiment={sentiment}\n        ></Search>\n      )}\n\n      {screen === 1 && (\n        <CorpusStats\n          languages={languages}\n          countries={countries}\n          pois={pois}\n        />\n      )}\n      {screen === 2 && (\n        <Misinformation\n          languages={languages}\n          countries={countries}\n          pois={pois}\n        />\n      )}\n    </Box >\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}