{"version":3,"sources":["components/Replies.tsx","components/Results.tsx","components/Analytics.jsx","components/Search.tsx","components/CorpusStats.jsx","components/Misinformation.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Replies","props","React","useState","data","setData","first","setFirst","spinner","setSpinner","show","message","setError","useEffect","url","URL","tweet_id","fetch","toString","method","redirect","then","response","json","result","catch","error","console","log","finally","Grid","container","xs","Box","sx","width","flex","textAlign","mt","CircularProgress","display","replies","length","map","item","index","Typography","mb","color","reply_text","id","renderReply","MENTIONS","HASHTAGS","URLS","ExpandMore","styled","expand","other","IconButton","theme","transform","marginLeft","transition","transitions","create","duration","shortest","Results","expanded","setExpanded","Array","showReplies","setShowReplies","createCard","parts","date","Date","tweet_date","dateString","toLocaleDateString","toLocaleTimeString","tweet_text","split","country","i","match","className","target","href","Card","bgcolor","CardHeader","title","name","poi_name","verified","fontSize","subheader","action","onClick","window","open","avatar","Avatar","CardContent","CardActions","splice","handleRepliesClick","handleExpandClick","Collapse","in","timeout","unmountOnExit","numFound","docs","Analytics","COLORS","createPieChart","Math","PI","chartData","PieChart","height","Tooltip","Legend","verticalAlign","align","Pie","dataKey","cx","cy","fill","label","labelKey","entry","Cell","gutterBottom","language","sentiment","words","hashtags","options","rotations","rotationAngles","size","Search","inputValue","setInputValue","page","setPage","fetchResults","start","undefined","body","createRequestBody","mode","JSON","stringify","headers","key","languages","push","countries","pois","handlePageChange","event","value","component","flexGrow","p","Toolbar","padding","Autocomplete","freeSolo","onKeyDown","onInputChange","newInputValue","renderInput","params","TextField","Button","variant","Alert","mx","severity","Pagination","count","ceil","showFirstButton","showLastButton","onChange","marginTop","mentions","renderResults","CorpusStats","require","dates","lang","poisSent","poisSentiment","positive","neutral","negative","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","Line","type","stroke","activeDot","r","BarChart","Bar","stackId","Misinformation","App","screen","setScreen","en","hi","es","setLanguage","USA","India","Mexico","setRegion","SSalud_mx","CDCgov","narendramodi","POTUS","marcorubio","JoeBiden","ShashiTharoor","SenTedCruz","lopezobrador_","SenSchumer","EnriqueAlfaroR","GobiernoMX","alfredodelmazo","osoriochong","AmitShah","Jaime_BonillaV","Claudiashein","ArvindKejriwal","mansukhmandviya","MoHFW_INDIA","RandPaul","HillaryClinton","AyushmanNHA","HLGatell","BarackObama","PMOIndia","DrTedros","KamalaHarris","rashtrapatibhvn","HHSGov","myogiadityanath","SSaludCdMx","dremilyportermd","WHO","GovRonDeSantis","RahulGandhi","VP","MauVila","GovKathyHochul","setPois","handleLanguageChange","checked","handleRegionChange","handlePoisChange","CssBaseline","AppBar","position","zIndex","drawer","Drawer","flexShrink","boxSizing","overflow","List","ListItem","button","ListItemIcon","ListItemText","primary","Accordion","AccordionSummary","expandIcon","AccordionDetails","FormControl","m","FormLabel","FormGroup","FormControlLabel","control","Checkbox","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70277745.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Alert, Autocomplete, Box, Button, CircularProgress, Grid, Pagination, TextField, Toolbar, Typography } from '@mui/material';\r\nimport Results from './Results';\r\nimport Analytics from './Analytics';\r\n\r\n\r\nexport default function Replies(props: any) {\r\n  const [data, setData] = React.useState<any | undefined>();\r\n  const [first, setFirst] = React.useState(false);\r\n  const [spinner, setSpinner] = React.useState(false);\r\n  const [error, setError] = React.useState({\r\n    show: false,\r\n    message: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!first) {\r\n      setSpinner(true);\r\n      const url = new URL(\"http://localhost:9999/replies?tweet_id=\" + props.tweet_id);\r\n      fetch(url.toString(), {\r\n        method: 'GET',\r\n        // mode: 'cors',\r\n        redirect: 'follow',\r\n      })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n          setData(result);\r\n       })\r\n        .catch(error => {\r\n          setError({\r\n            show: true,\r\n            message: error.toString()\r\n          });\r\n          console.log(error);\r\n        })\r\n        .finally(() => {\r\n          setSpinner(false);\r\n          setFirst(true);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const showProgress = () => {\r\n    if (spinner) {\r\n      return (\r\n        <Box sx={{ width: '100%', flex: 1, textAlign: 'center', mt: '50px' }}>\r\n          <div><CircularProgress /></div>\r\n          <div>Loading</div>\r\n        </Box>\r\n      )\r\n    } else {\r\n      return (\r\n        <Box sx={{ display: 'flex' }}>\r\n        </Box>\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderReply = () => {\r\n    console.log(data);\r\n    if (data && data.replies.length > 0) {\r\n      console.log(\"inside if\");\r\n\r\n      return (\r\n        data?.replies?.map((item: any, index: number) => {\r\n          return (\r\n            <Typography sx={{ mb: 1.5 }} color=\"text.primary\" key={item.id}>\r\n              {item.reply_text}\r\n            </Typography>\r\n          )\r\n        })\r\n      );\r\n    } else if (data && data.replies.length == 0 && !spinner) {\r\n      return (\r\n        <Typography sx={{ mb: 1.5 }} color=\"text.primary\">\r\n          No replies found.\r\n        </Typography>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid container xs={12}>\r\n      {showProgress()}\r\n      {renderReply()}\r\n    </Grid>\r\n  )\r\n}","import React from 'react';\r\nimport { CardContent, Card, CardHeader, Grid, Typography, IconButton, CardActions, styled, IconButtonProps, Collapse, Avatar } from '@mui/material';\r\nimport ModeCommentIcon from '@mui/icons-material/ModeComment';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\nimport VerifiedIcon from '@mui/icons-material/Verified';\r\nimport Replies from './Replies';\r\n\r\nconst MENTIONS = /@([a-z\\d_]+)/ig;\r\nconst HASHTAGS = /(^|\\s)#(\\w+)/gm;\r\nconst URLS = /(http|ftp|https):\\/\\/([\\w_-]+(?:(?:\\.[\\w_-]+)+))([\\w.,@?^=%&:\\/~+#-]*[\\w@?^=%&\\/~+#-])/gm;\r\n\r\n\r\ninterface ExpandMoreProps extends IconButtonProps {\r\n  expand: boolean;\r\n}\r\n\r\nconst ExpandMore = styled((props: ExpandMoreProps) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n  marginLeft: 'auto',\r\n  transition: theme.transitions.create('transform', {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\nexport default function Results(props: any) {\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [showReplies, setShowReplies] = React.useState(Array(10));\r\n\r\n  const handleExpandClick = (index: number) => {\r\n    if (showReplies[index]) {\r\n      setShowReplies([...showReplies.splice(0, index), !showReplies[index], ...showReplies.splice(index + 1)]);\r\n    }\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const handleRepliesClick = (index: number) => {\r\n    if (expanded) {\r\n      setExpanded(!expanded);\r\n    }\r\n    setShowReplies([...showReplies.splice(0, index), !showReplies[index], ...showReplies.splice(index + 1)]);\r\n  };\r\n\r\n  function showTweet(id: any) {\r\n    window.open(\"https://twitter.com/test/status/\" + id.toString());\r\n  }\r\n\r\n  function createCard(item: any, index: number) {\r\n\r\n    const date = new Date(item.tweet_date);\r\n    const dateString = date.toLocaleDateString() + ' ' + date.toLocaleTimeString();\r\n    var parts;\r\n    if (item.tweet_text) {\r\n      parts = item.tweet_text.split(\" \");\r\n    } else {\r\n      parts = item.reply_text.split(\" \");\r\n    }\r\n    const country = item.country;\r\n\r\n    for (let i = 0; i < parts.length; i++) {\r\n      if (parts[i].match(MENTIONS)) {\r\n        parts[i] = <span> <a className=\"mention\" target=\"_blank\" key={parts[i] + item.id} href={`http://twitter.com/` + parts[i]}>{parts[i]}</a> </span>;\r\n      } else if (parts[i].match(HASHTAGS)) {\r\n        parts[i] = <span> <a className=\"hashtag\" target=\"_blank\" key={parts[i] + item.id} href={`http://twitter.com/` + parts[i]}>{parts[i]}</a> </span>;\r\n      } else if (parts[i].match(URLS)) {\r\n        parts[i] = <span> <a className=\"url\" target=\"_blank\" key={parts[i] + item.id} href={parts[i]}>{parts[i]}</a> </span>;\r\n      } else {\r\n        parts[i] = <span> {parts[i]} </span>\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Card key={item.id} sx={{ mt: 2, bgcolor: 'aliceblue' }} >\r\n        <CardHeader\r\n          title={\r\n            <div>\r\n              <span> {item.name ? item.name : item.poi_name ? item.poi_name : item.id } </span>\r\n              {item.verified ? <span> <VerifiedIcon color='success' fontSize='inherit' /> </span> : ''}\r\n            </div>\r\n          }\r\n          subheader={dateString}\r\n          action={\r\n            <IconButton aria-label=\"settings\">\r\n              <OpenInNewIcon onClick={() => showTweet(item.id)} />\r\n            </IconButton>\r\n          }\r\n          avatar={\r\n            <Avatar aria-label=\"avatar\">{item.name ? item.name[0] : item.poi_name ? item.poi_name[0] : item.id[0] }</Avatar>\r\n          }\r\n        />\r\n        <CardContent>\r\n          <Typography color=\"text.primary\">\r\n            {parts}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <ExpandMore\r\n            expand={showReplies[index]}\r\n            onClick={() => { handleRepliesClick(index) }}\r\n            aria-expanded={showReplies[index]}\r\n            aria-label=\"Comments\"\r\n          >\r\n            <ModeCommentIcon />\r\n          </ExpandMore>\r\n          <ExpandMore\r\n            expand={expanded}\r\n            onClick={() => { handleExpandClick(index) }}\r\n            aria-expanded={expanded}\r\n            aria-label=\"show more\"\r\n          >\r\n            <ExpandMoreIcon />\r\n          </ExpandMore>\r\n        </CardActions>\r\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <Typography>\r\n              {country ? 'Country: ' + country : ''}\r\n            </Typography>\r\n          </CardContent>\r\n        </Collapse>\r\n        <Collapse in={showReplies[index]} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <Replies tweet_id={item.id}></Replies>\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      About {props.data.response?.numFound} results.\r\n      {\r\n        props.data.response?.docs?.map((item: any, index: number) => {\r\n          return createCard(item, index);\r\n        })\r\n      }\r\n    </Grid>\r\n  )\r\n}","import { CardContent, Card, Grid, Typography } from '@mui/material';\r\nimport { Bar, BarChart, CartesianGrid, Legend, Line, LineChart, Pie, Cell, PieChart, Tooltip, XAxis, YAxis } from 'recharts';\r\nimport ReactWordcloud from 'react-wordcloud';\r\n\r\nexport default function Analytics(props) {\r\n\r\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28'];\r\n  const RADIAN = Math.PI / 180;\r\n  const options = {\r\n    rotations: 1,\r\n    rotationAngles: [0],\r\n  };\r\n  const size = [600, 300];\r\n\r\n  const createPieChart = (chartData) => {\r\n    return (\r\n      <PieChart width={500} height={250}>\r\n        <Tooltip />\r\n        <Legend verticalAlign=\"top\" height={24} align=\"right\" />\r\n        <Pie data={chartData} dataKey=\"value\" cx=\"50%\" cy=\"50%\" fill=\"#8884d8\" label labelKey=\"name\">\r\n          {chartData.map((entry, index) => (\r\n            <Cell key={`cell-${index}-${entry}`} fill={COLORS[index % COLORS.length]} />\r\n          ))}\r\n        </Pie>\r\n      </PieChart>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      Result analytics\r\n      <Card sx={{ mt: 2, bgcolor: 'ghostwhite' }}>\r\n        <CardContent>\r\n          <Typography sx={{ fontSize: 14 }} color=\"text.primary\" gutterBottom>\r\n            Country wise division\r\n          </Typography>\r\n          {createPieChart(props.country)}\r\n        </CardContent>\r\n      </Card>\r\n      <Card sx={{ mt: 2, bgcolor: 'ghostwhite' }}>\r\n        <CardContent>\r\n          <Typography sx={{ fontSize: 14 }} color=\"text.primary\" gutterBottom>\r\n            Language wise division\r\n          </Typography>\r\n          {createPieChart(props.language)}\r\n        </CardContent>\r\n      </Card>\r\n      <Card sx={{ mt: 2, bgcolor: 'ghostwhite' }}>\r\n        <CardContent>\r\n          <Typography sx={{ fontSize: 14 }} color=\"text.primary\" gutterBottom>\r\n            Language wise division\r\n          </Typography>\r\n          {createPieChart(props.sentiment)}\r\n        </CardContent>\r\n      </Card>\r\n      <Card sx={{ mt: 2, bgcolor: 'ghostwhite'}}>\r\n        <ReactWordcloud words={props.hashtags} options={options} size={size} />\r\n      </Card>\r\n    </Grid>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Alert, Autocomplete, Box, Button, CircularProgress, Grid, Pagination, TextField, Toolbar, Typography } from '@mui/material';\r\nimport Results from './Results';\r\nimport Analytics from './Analytics.jsx';\r\n\r\n\r\nexport default function Search(props: any) {\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [data, setData] = React.useState<any | undefined>();\r\n  const [spinner, setSpinner] = React.useState(false);\r\n  const [page, setPage] = React.useState(1);\r\n  const [error, setError] = React.useState({\r\n    show: false,\r\n    message: \"\"\r\n  });\r\n\r\n  const sample: any[] = [];\r\n\r\n  const fetchResults = () => {\r\n    const start = page ? ((page - 1) * 10).toString() : \"0\"\r\n    console.log(start);\r\n\r\n    setData(undefined);\r\n    setSpinner(true);\r\n    setError({ ...error, show: false });\r\n\r\n    if (!inputValue) {\r\n      setSpinner(false);\r\n      console.log(\"Enter some details\");\r\n    } else {\r\n      const url = new URL(\"http://localhost:9999/api\");\r\n      const headers = {\r\n        'Content-Type': 'application/json'\r\n      }\r\n      const body = {\r\n        \"query\": inputValue,\r\n        \"start\": start ? start.toString() : \"0\",\r\n        \"pois\": Array(),\r\n        \"countries\": Array(),\r\n        \"languages\": Array()\r\n      }\r\n      createRequestBody(body);\r\n\r\n      fetch(url.toString(), {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        redirect: 'follow',\r\n        body: JSON.stringify(body),\r\n        headers: headers\r\n      })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n          setData(result);\r\n        })\r\n        .catch(error => {\r\n          setError({\r\n            show: true,\r\n            message: error.toString()\r\n          });\r\n          console.log(error);\r\n        })\r\n        .finally(() => {\r\n          setSpinner(false);\r\n        });\r\n    }\r\n  }\r\n\r\n  const createRequestBody = (body: any) => {\r\n    for (let key in props.languages) {\r\n      if (props.languages[key]) {\r\n        body.languages.push(key)\r\n      }\r\n    }\r\n    for (let key in props.countries) {\r\n      if (props.countries[key]) {\r\n        body.countries.push(key)\r\n      }\r\n    }\r\n    for (let key in props.pois) {\r\n      if (props.pois[key]) {\r\n        body.pois.push(key)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleKeyDown = (event: any) => {\r\n    if (event.key === \"Enter\") {\r\n      fetchResults();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchResults();\r\n  }, [page])\r\n\r\n  const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setPage(value);\r\n  }\r\n\r\n  const showProgress = () => {\r\n    if (spinner) {\r\n      return (\r\n        <Box sx={{ width: '100%', flex: 1, textAlign: 'center', mt: '200px' }}>\r\n          <div><CircularProgress /></div>\r\n          <div>Loading</div>\r\n        </Box>\r\n      )\r\n    } else {\r\n      return (\r\n        <Box sx={{ display: 'flex' }}>\r\n        </Box>\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderError = () => {\r\n    if (error.show) {\r\n      return (\r\n        <Alert sx={{ mx: 2 }} severity=\"error\">{error.message}</Alert>\r\n      )\r\n    } else {\r\n      return (\r\n        <div></div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderResults = () => {\r\n    if (data) {\r\n\r\n      return (\r\n        <Grid container xs={12}>\r\n          <Grid item padding={2} xs={6}>\r\n            <Results data={data}></Results>\r\n            <Pagination\r\n              count={Math.ceil(data?.response?.numFound / 10)}\r\n              showFirstButton\r\n              showLastButton\r\n              color=\"primary\"\r\n              page={page}\r\n              onChange={handlePageChange}\r\n              sx={{ marginLeft: \"25%\", marginTop: \"24px\" }} />\r\n          </Grid>\r\n          <Grid item padding={2} xs={6} sx={{ bgcolor: \"primary.disabled\" }}>\r\n            <Analytics\r\n              language={data.language}\r\n              country={data.country}\r\n              hashtags={data.hashtags}\r\n              mentions={data.mentions}\r\n              sentiment={data.sentiment}\r\n            ></Analytics>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      );\r\n    } else if (!spinner && !data && !error.show) {\r\n      return (\r\n        <Grid container xs={12}>\r\n          <Typography padding={2}>Begin search to see results.</Typography>\r\n        </Grid>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box component=\"main\" sx={{ flexGrow: 1, p: 0 }}>\r\n      <Toolbar />\r\n      <Grid container xs={12}>\r\n        <Grid item padding={2} xs={4}>\r\n          <Autocomplete\r\n            freeSolo\r\n            id=\"combo-box-demo\"\r\n            options={sample}\r\n            onKeyDown={handleKeyDown}\r\n            onInputChange={(event, newInputValue) => {\r\n              setInputValue(newInputValue);\r\n            }}\r\n            sx={{ width: '100%' }}\r\n            renderInput={(params) => <TextField {...params} label=\"Search\" />}\r\n          />\r\n        </Grid>\r\n        <Grid item padding={2} xs={1.5}>\r\n          <Button variant=\"contained\" sx={{ width: '100%', height: '100%' }} onClick={() => { fetchResults() }}>\r\n            Search\r\n          </Button>\r\n        </Grid>\r\n        <Grid item padding={2} xs={6.5}></Grid>\r\n        {renderError()}\r\n        {renderResults()}\r\n      </Grid>\r\n      {showProgress()}\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Box, Card, CardContent, CircularProgress, Grid, Toolbar, Typography } from '@mui/material';\r\nimport { Cell, Legend, Pie, PieChart, Tooltip, LineChart, CartesianGrid, XAxis, YAxis, Line, BarChart, Bar } from 'recharts';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport ReactWordcloud from 'react-wordcloud';\r\n\r\n\r\nexport default function CorpusStats(props) {\r\n\r\n  const country = require('./static_country.json');\r\n  const dates = require('./static_dates.json');\r\n  const hashtags = require('./static_hashtags.json');\r\n  const lang = require('./static_lang.json');\r\n  const mentions = require('./static_mentions.json');\r\n  const poisSent = require('./static_poi_sent.json');\r\n  const poisSentiment = [];\r\n  const pois = require('./static_pois.json');\r\n  const sentiment = require('./static_sentiment.json');\r\n\r\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28'];\r\n  const RADIAN = Math.PI / 180;\r\n  const options = {\r\n    rotations: 1,\r\n    rotationAngles: [0],\r\n  };\r\n  const size = [500, 200];\r\n\r\n  for (let key in poisSent) {\r\n    poisSentiment.push({\r\n      name: key,\r\n      positive: poisSent[key][\"Positive\"],\r\n      neutral: poisSent[key][\"Neutral\"],\r\n      negative: poisSent[key][\"Negative\"],\r\n    })\r\n  }\r\n\r\n  const createPieChart = (chartData) => {\r\n    return (\r\n      <PieChart width={500} height={250}>\r\n        <Tooltip />\r\n        <Legend verticalAlign=\"top\" height={24} align=\"right\" />\r\n        <Pie data={chartData} dataKey=\"value\" cx=\"50%\" cy=\"50%\" fill=\"#8884d8\" label >\r\n          {chartData.map((entry, index) => (\r\n            <Cell key={`cell-${index}-${entry}`} fill={COLORS[index % COLORS.length]} />\r\n          ))}\r\n        </Pie>\r\n      </PieChart>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Box component=\"main\" sx={{ flexGrow: 1, p: 0 }}>\r\n      <Toolbar />\r\n      <Grid container xs={12}>\r\n        <Grid item padding={2} xs={6}>\r\n          <Card sx={{ mt: 1, bgcolor: 'ghostwhite' }}>\r\n            <CardContent>\r\n              <Typography sx={{ fontSize: 14 }} color=\"text.primary\" gutterBottom>\r\n                Country wise division\r\n              </Typography>\r\n              {createPieChart(country)}\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item padding={2} xs={6}>\r\n          <Card sx={{ mt: 1, bgcolor: 'ghostwhite' }}>\r\n            <CardContent>\r\n              <Typography sx={{ fontSize: 14 }} color=\"text.primary\" gutterBottom>\r\n                Language wise division\r\n              </Typography>\r\n              {createPieChart(lang)}\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item padding={2} xs={6}>\r\n          <Card sx={{ mt: 1, bgcolor: 'ghostwhite' }}>\r\n            <CardContent>\r\n              <Typography sx={{ fontSize: 14 }} color=\"text.primary\" gutterBottom>\r\n                Sentiment wise division\r\n              </Typography>\r\n              {createPieChart(sentiment)}\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item padding={2} xs={6}>\r\n          <Card sx={{ mt: 1, bgcolor: 'ghostwhite' }}>\r\n            <CardContent>\r\n              <ReactWordcloud words={hashtags} options={options} size={size} />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item padding={2} xs={6}>\r\n          <Card sx={{ mt: 1, bgcolor: 'ghostwhite' }}>\r\n            <CardContent>\r\n              <ReactWordcloud words={mentions} options={options} size={size} />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item padding={2} xs={6}>\r\n          <Card sx={{ mt: 1, bgcolor: 'ghostwhite' }}>\r\n            <CardContent>\r\n              <Typography sx={{ fontSize: 14 }} color=\"text.primary\" gutterBottom>\r\n                Sentiment wise division\r\n              </Typography>\r\n              {createPieChart(sentiment)}\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item padding={2} xs={12}>\r\n          <Card sx={{ mt: 1, bgcolor: 'ghostwhite' }}>\r\n            <CardContent>\r\n              <LineChart\r\n                width={1000}\r\n                height={300}\r\n                data={dates}\r\n                margin={{\r\n                  top: 5,\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5,\r\n                }}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis dataKey=\"value\" height=\"200\" />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n              </LineChart>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item padding={2} xs={12}>\r\n          <Card sx={{ mt: 1, bgcolor: 'ghostwhite' }}>\r\n            <CardContent>\r\n              <BarChart\r\n                width={1100}\r\n                height={300}\r\n                data={poisSentiment}\r\n                margin={{\r\n                  top: 20,\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5,\r\n                }}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey=\"positive\" stackId=\"a\" fill=\"#82ca9d\" />\r\n                <Bar dataKey=\"neutral\" stackId=\"a\" fill=\"#808080\" />\r\n                <Bar dataKey=\"negative\" stackId=\"a\" fill=\"#AA4A44\" />\r\n              </BarChart>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Alert, Autocomplete, Box, Button, CircularProgress, Grid, Pagination, TextField, Toolbar, Typography } from '@mui/material';\r\nimport Results from './Results';\r\nimport Analytics from './Analytics.jsx';\r\nimport { Cell, Legend, Pie, PieChart, Tooltip } from 'recharts';\r\n\r\n\r\nexport default function Misinformation(props: any) {\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [data, setData] = React.useState<any | undefined>();\r\n  const [spinner, setSpinner] = React.useState(false);\r\n  const [page, setPage] = React.useState(1);\r\n  const [error, setError] = React.useState({\r\n    show: false,\r\n    message: \"\"\r\n  });\r\n\r\n  const sample: any[] = [];\r\n\r\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28'];\r\n  const RADIAN = Math.PI / 180;\r\n  const options = {\r\n    rotations: 1,\r\n    rotationAngles: [0],\r\n  };\r\n  const size = [600, 300];\r\n\r\n  const createPieChart = (chartData: any) => {\r\n    return (\r\n      <PieChart width={500} height={250}>\r\n        <Tooltip />\r\n        <Legend verticalAlign=\"top\" height={24} align=\"right\" />\r\n        <Pie data={chartData} dataKey=\"value\" cx=\"50%\" cy=\"50%\" fill=\"#8884d8\" label >\r\n          {chartData.map((entry: string, index: number) => (\r\n            <Cell key={`cell-${index}-${entry}`} fill={COLORS[index % COLORS.length]} />\r\n          ))}\r\n        </Pie>\r\n      </PieChart>\r\n    )\r\n  }\r\n\r\n  const fetchResults = () => {\r\n    const start = page ? ((page - 1) * 10).toString() : \"0\"\r\n    console.log(start);\r\n\r\n    setData(undefined);\r\n    setSpinner(true);\r\n    setError({ ...error, show: false });\r\n\r\n    if (!inputValue) {\r\n      setSpinner(false);\r\n      console.log(\"Enter some details\");\r\n    } else {\r\n      const url = new URL(\"http://localhost:9999/api\");\r\n      const headers = {\r\n        'Content-Type': 'application/json'\r\n      }\r\n      const body = {\r\n        \"query\": inputValue,\r\n        \"start\": start ? start.toString() : \"0\",\r\n        \"pois\": Array(),\r\n        \"countries\": Array(),\r\n        \"languages\": Array()\r\n      }\r\n\r\n      fetch(url.toString(), {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        redirect: 'follow',\r\n        headers: headers\r\n      })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n          setData(result);\r\n        })\r\n        .catch(error => {\r\n          setError({\r\n            show: true,\r\n            message: error.toString()\r\n          });\r\n          console.log(error);\r\n        })\r\n        .finally(() => {\r\n          setSpinner(false);\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n  const showProgress = () => {\r\n    if (spinner) {\r\n      return (\r\n        <Box sx={{ width: '100%', flex: 1, textAlign: 'center', mt: '200px' }}>\r\n          <div><CircularProgress /></div>\r\n          <div>Loading</div>\r\n        </Box>\r\n      )\r\n    } else {\r\n      return (\r\n        <Box sx={{ display: 'flex' }}>\r\n        </Box>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box component=\"main\" sx={{ flexGrow: 1, p: 0 }}>\r\n      <Toolbar />\r\n      <Grid container xs={12}>\r\n        <Grid item padding={2} xs={4}>\r\n        </Grid>\r\n      </Grid>\r\n      {showProgress()}\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Accordion, AccordionDetails, AccordionSummary, AppBar, Box, Checkbox, CssBaseline, Drawer, FormControl, FormControlLabel, FormGroup, FormLabel, List, ListItem, ListItemIcon, ListItemText, Toolbar, Typography } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport QueryStatsIcon from '@mui/icons-material/QueryStats';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport './App.css';\r\nimport Search from './components/Search';\r\nimport CorpusStats from './components/CorpusStats';\r\nimport Misinformation from './components/Misinformation';\r\nimport { useEffect } from 'react';\r\n\r\nconst drawerWidth = 300;\r\n\r\nexport default function App() {\r\n\r\n  const [screen, setScreen] = React.useState(0);\r\n\r\n  console.log(screen, 'screen');\r\n\r\n\r\n  const [languages, setLanguage] = React.useState({\r\n    en: false,\r\n    hi: false,\r\n    es: false,\r\n  });\r\n  const [countries, setRegion] = React.useState({\r\n    USA: false,\r\n    India: false,\r\n    Mexico: false\r\n  });\r\n  const [pois, setPois] = React.useState({\r\n    SSalud_mx: false,\r\n    CDCgov: false,\r\n    narendramodi: false,\r\n    POTUS: false,\r\n    marcorubio: false,\r\n    JoeBiden: false,\r\n    ShashiTharoor: false,\r\n    SenTedCruz: false,\r\n    lopezobrador_: false,\r\n    SenSchumer: false,\r\n    EnriqueAlfaroR: false,\r\n    GobiernoMX: false,\r\n    alfredodelmazo: false,\r\n    osoriochong: false,\r\n    AmitShah: false,\r\n    Jaime_BonillaV: false,\r\n    Claudiashein: false,\r\n    ArvindKejriwal: false,\r\n    mansukhmandviya: false,\r\n    MoHFW_INDIA: false,\r\n    RandPaul: false,\r\n    HillaryClinton: false,\r\n    AyushmanNHA: false,\r\n    HLGatell: false,\r\n    BarackObama: false,\r\n    PMOIndia: false,\r\n    DrTedros: false,\r\n    KamalaHarris: false,\r\n    rashtrapatibhvn: false,\r\n    HHSGov: false,\r\n    myogiadityanath: false,\r\n    SSaludCdMx: false,\r\n    dremilyportermd: false,\r\n    WHO: false,\r\n    GovRonDeSantis: false,\r\n    RahulGandhi: false,\r\n    VP: false,\r\n    MauVila: false,\r\n    GovKathyHochul: false,\r\n  });\r\n\r\n  const poisList = [\"SSalud_mx\",\r\n    \"CDCgov\",\r\n    \"narendramodi\",\r\n    \"POTUS\",\r\n    \"marcorubio\",\r\n    \"JoeBiden\",\r\n    \"ShashiTharoor\",\r\n    \"SenTedCruz\",\r\n    \"lopezobrador_\",\r\n    \"SenSchumer\",\r\n    \"EnriqueAlfaroR\",\r\n    \"GobiernoMX\",\r\n    \"alfredodelmazo\",\r\n    \"osoriochong\",\r\n    \"AmitShah\",\r\n    \"Jaime_BonillaV\",\r\n    \"Claudiashein\",\r\n    \"ArvindKejriwal\",\r\n    \"mansukhmandviya\",\r\n    \"MoHFW_INDIA\",\r\n    \"RandPaul\",\r\n    \"HillaryClinton\",\r\n    \"AyushmanNHA\",\r\n    \"HLGatell\",\r\n    \"BarackObama\",\r\n    \"PMOIndia\",\r\n    \"DrTedros\",\r\n    \"KamalaHarris\",\r\n    \"rashtrapatibhvn\",\r\n    \"HHSGov\",\r\n    \"myogiadityanath\",\r\n    \"SSaludCdMx\",\r\n    \"dremilyportermd\",\r\n    \"WHO\",\r\n    \"GovRonDeSantis\",\r\n    \"RahulGandhi\",\r\n    \"VP\",\r\n    \"MauVila\",\r\n    \"GovKathyHochul\"];\r\n\r\n  const handleLanguageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setLanguage({\r\n      ...languages,\r\n      [event.target.name]: event.target.checked,\r\n    })\r\n  };\r\n\r\n  const handleRegionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRegion({\r\n      ...countries,\r\n      [event.target.name]: event.target.checked,\r\n    })\r\n  };\r\n\r\n  const handlePoisChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPois({\r\n      ...pois,\r\n      [event.target.name]: event.target.checked,\r\n    })\r\n  };\r\n\r\n  const handleScreenChange = (num: number) => {\r\n    setScreen(num);\r\n  }\r\n  \r\n  return (\r\n    <Box sx={{ display: 'flex' }}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            COVID Sentiment Analysis\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        sx={{\r\n          width: drawerWidth,\r\n          flexShrink: 0,\r\n          [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box' },\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <Box sx={{ overflow: 'auto' }}>\r\n          <List>\r\n            <ListItem button key={\"search\"} onClick={() => { handleScreenChange(0) }}>\r\n              <ListItemIcon>\r\n                <SearchIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Search tweets\"} />\r\n            </ListItem>\r\n            <ListItem>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Typography>Filters</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <FormControl sx={{ m: 1 }} component=\"fieldset\" variant=\"standard\">\r\n                    <FormLabel component=\"legend\">Language</FormLabel>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={languages.en} onChange={handleLanguageChange} name=\"en\" />\r\n                        }\r\n                        label=\"English\"\r\n                      />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={languages.hi} onChange={handleLanguageChange} name=\"hi\" />\r\n                        }\r\n                        label=\"Hindi\"\r\n                      />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={languages.es} onChange={handleLanguageChange} name=\"es\" />\r\n                        }\r\n                        label=\"Spanish\"\r\n                      />\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                  <FormControl sx={{ m: 1 }} component=\"fieldset\" variant=\"standard\">\r\n                    <FormLabel component=\"legend\">Region</FormLabel>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={countries.USA} onChange={handleRegionChange} name=\"USA\" />\r\n                        }\r\n                        label=\"USA\"\r\n                      />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={countries.India} onChange={handleRegionChange} name=\"India\" />\r\n                        }\r\n                        label=\"India\"\r\n                      />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={countries.Mexico} onChange={handleRegionChange} name=\"Mexico\" />\r\n                        }\r\n                        label=\"Mexico\"\r\n                      />\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                  <FormControl sx={{ m: 1 }} component=\"fieldset\" variant=\"standard\">\r\n                    <FormLabel component=\"legend\">Person of Interest</FormLabel>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.AmitShah} onChange={handlePoisChange} name=\"AmitShah\" />\r\n                        }\r\n                        label=\"AmitShah\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.ArvindKejriwal} onChange={handlePoisChange} name=\"ArvindKejriwal\" />\r\n                        }\r\n                        label=\"ArvindKejriwal\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.AyushmanNHA} onChange={handlePoisChange} name=\"AyushmanNHA\" />\r\n                        }\r\n                        label=\"AyushmanNHA\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.BarackObama} onChange={handlePoisChange} name=\"BarackObama\" />\r\n                        }\r\n                        label=\"BarackObama\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.CDCgov} onChange={handlePoisChange} name=\"CDCgov\" />\r\n                        }\r\n                        label=\"CDCgov\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.Claudiashein} onChange={handlePoisChange} name=\"Claudiashein\" />\r\n                        }\r\n                        label=\"Claudiashein\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.DrTedros} onChange={handlePoisChange} name=\"DrTedros\" />\r\n                        }\r\n                        label=\"DrTedros\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.EnriqueAlfaroR} onChange={handlePoisChange} name=\"EnriqueAlfaroR\" />\r\n                        }\r\n                        label=\"EnriqueAlfaroR\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.GobiernoMX} onChange={handlePoisChange} name=\"GobiernoMX\" />\r\n                        }\r\n                        label=\"GobiernoMX\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.GovKathyHochul} onChange={handlePoisChange} name=\"GovKathyHochul\" />\r\n                        }\r\n                        label=\"GovKathyHochul\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.GovRonDeSantis} onChange={handlePoisChange} name=\"GovRonDeSantis\" />\r\n                        }\r\n                        label=\"GovRonDeSantis\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.HHSGov} onChange={handlePoisChange} name=\"HHSGov\" />\r\n                        }\r\n                        label=\"HHSGov\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.HLGatell} onChange={handlePoisChange} name=\"HLGatell\" />\r\n                        }\r\n                        label=\"HLGatell\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.HillaryClinton} onChange={handlePoisChange} name=\"HillaryClinton\" />\r\n                        }\r\n                        label=\"HillaryClinton\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.Jaime_BonillaV} onChange={handlePoisChange} name=\"Jaime_BonillaV\" />\r\n                        }\r\n                        label=\"Jaime_BonillaV\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.JoeBiden} onChange={handlePoisChange} name=\"JoeBiden\" />\r\n                        }\r\n                        label=\"JoeBiden\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.KamalaHarris} onChange={handlePoisChange} name=\"KamalaHarris\" />\r\n                        }\r\n                        label=\"KamalaHarris\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.MauVila} onChange={handlePoisChange} name=\"MauVila\" />\r\n                        }\r\n                        label=\"MauVila\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.MoHFW_INDIA} onChange={handlePoisChange} name=\"MoHFW_INDIA\" />\r\n                        }\r\n                        label=\"MoHFW_INDIA\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.PMOIndia} onChange={handlePoisChange} name=\"PMOIndia\" />\r\n                        }\r\n                        label=\"PMOIndia\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.POTUS} onChange={handlePoisChange} name=\"POTUS\" />\r\n                        }\r\n                        label=\"POTUS\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.RahulGandhi} onChange={handlePoisChange} name=\"RahulGandhi\" />\r\n                        }\r\n                        label=\"RahulGandhi\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.RandPaul} onChange={handlePoisChange} name=\"RandPaul\" />\r\n                        }\r\n                        label=\"RandPaul\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.SSaludCdMx} onChange={handlePoisChange} name=\"SSaludCdMx\" />\r\n                        }\r\n                        label=\"SSaludCdMx\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.SSalud_mx} onChange={handlePoisChange} name=\"SSalud_mx\" />\r\n                        }\r\n                        label=\"SSalud_mx\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.SenSchumer} onChange={handlePoisChange} name=\"SenSchumer\" />\r\n                        }\r\n                        label=\"SenSchumer\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.SenTedCruz} onChange={handlePoisChange} name=\"SenTedCruz\" />\r\n                        }\r\n                        label=\"SenTedCruz\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.ShashiTharoor} onChange={handlePoisChange} name=\"ShashiTharoor\" />\r\n                        }\r\n                        label=\"ShashiTharoor\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.VP} onChange={handlePoisChange} name=\"VP\" />\r\n                        }\r\n                        label=\"VP\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.WHO} onChange={handlePoisChange} name=\"WHO\" />\r\n                        }\r\n                        label=\"WHO\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.alfredodelmazo} onChange={handlePoisChange} name=\"alfredodelmazo\" />\r\n                        }\r\n                        label=\"alfredodelmazo\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.dremilyportermd} onChange={handlePoisChange} name=\"dremilyportermd\" />\r\n                        }\r\n                        label=\"dremilyportermd\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.lopezobrador_} onChange={handlePoisChange} name=\"lopezobrador_\" />\r\n                        }\r\n                        label=\"lopezobrador_\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.mansukhmandviya} onChange={handlePoisChange} name=\"mansukhmandviya\" />\r\n                        }\r\n                        label=\"mansukhmandviya\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.marcorubio} onChange={handlePoisChange} name=\"marcorubio\" />\r\n                        }\r\n                        label=\"marcorubio\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.myogiadityanath} onChange={handlePoisChange} name=\"myogiadityanath\" />\r\n                        }\r\n                        label=\"myogiadityanath\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.narendramodi} onChange={handlePoisChange} name=\"narendramodi\" />\r\n                        }\r\n                        label=\"narendramodi\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.osoriochong} onChange={handlePoisChange} name=\"osoriochong\" />\r\n                        }\r\n                        label=\"osoriochong\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.rashtrapatibhvn} onChange={handlePoisChange} name=\"rashtrapatibhvn\" />\r\n                        }\r\n                        label=\"rashtrapatibhvn\"\r\n                      />\r\n                    </FormGroup>\r\n\r\n                  </FormControl>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            </ListItem>\r\n            <ListItem button key={\"stats\"}>\r\n              <ListItemIcon>\r\n                <QueryStatsIcon />\r\n              </ListItemIcon>\r\n              <ListItemText onClick={() => setScreen(1)} primary={\"Corpus stats\"} />\r\n            </ListItem>\r\n            <ListItem button key={\"hesitancy\"}>\r\n              <ListItemIcon>\r\n                <QueryStatsIcon />\r\n              </ListItemIcon>\r\n              <ListItemText onClick={() => setScreen(2)} primary={\"Misinformation\"} />\r\n            </ListItem>\r\n          </List>\r\n        </Box>\r\n      </Drawer>\r\n\r\n\r\n      {screen === 0 && (\r\n      <Search\r\n        languages={languages}\r\n        countries={countries}\r\n        pois={pois}\r\n      ></Search>\r\n      )}\r\n\r\n      {screen === 1 && (\r\n       <CorpusStats\r\n       languages={languages}\r\n       countries={countries}\r\n       pois={pois}\r\n     />\r\n      )}\r\n      {screen === 2 && (\r\n        <Misinformation\r\n        languages={languages}\r\n        countries={countries}\r\n        pois={pois}\r\n      />\r\n      )}\r\n    </Box >\r\n  );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}