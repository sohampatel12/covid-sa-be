{"version":3,"sources":["components/Results.tsx","components/Analytics.tsx","components/Search.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MENTIONS","HASHTAGS","URLS","ExpandMore","styled","props","expand","other","IconButton","theme","transform","marginLeft","transition","transitions","create","duration","shortest","Results","React","useState","expanded","setExpanded","handleExpandClick","createCard","item","date","Date","tweet_date","dateString","toLocaleDateString","toLocaleTimeString","parts","tweet_text","split","country","i","length","match","className","target","href","id","Card","sx","mt","bgcolor","CardHeader","title","verified","color","fontSize","subheader","action","onClick","window","open","toString","avatar","Avatar","CardContent","Typography","mb","CardActions","disableSpacing","Collapse","in","timeout","unmountOnExit","Grid","xs","data","response","numFound","docs","map","Analytics","PieChart","width","height","Tooltip","Pie","dataKey","nameKey","cx","cy","outerRadius","fill","innerRadius","label","pt","BarChart","CartesianGrid","strokeDasharray","XAxis","YAxis","Legend","Bar","LineChart","margin","top","right","left","bottom","Line","type","stroke","Search","inputValue","setInputValue","setData","spinner","setSpinner","page","setPage","show","message","error","setError","fetchResults","start","console","log","undefined","url","URL","body","Array","createRequestBody","fetch","method","mode","redirect","JSON","stringify","headers","then","json","result","catch","finally","key","languages","push","countries","pois","useEffect","handlePageChange","event","value","Box","component","flexGrow","p","Toolbar","container","padding","Autocomplete","freeSolo","options","onKeyDown","onInputChange","newInputValue","renderInput","params","TextField","Button","variant","Alert","mx","severity","Pagination","count","Math","ceil","showFirstButton","showLastButton","onChange","marginTop","language","lang","hashtags","mentions","renderResults","flex","textAlign","CircularProgress","display","App","english","hindi","spanish","setLanguage","usa","india","mexico","setRegion","SSalud_mx","CDCgov","narendramodi","POTUS","marcorubio","JoeBiden","ShashiTharoor","SenTedCruz","lopezobrador_","SenSchumer","EnriqueAlfaroR","GobiernoMX","alfredodelmazo","osoriochong","AmitShah","Jaime_BonillaV","Claudiashein","ArvindKejriwal","mansukhmandviya","MoHFW_INDIA","RandPaul","HillaryClinton","AyushmanNHA","HLGatell","BarackObama","PMOIndia","DrTedros","KamalaHarris","rashtrapatibhvn","HHSGov","myogiadityanath","SSaludCdMx","dremilyportermd","WHO","GovRonDeSantis","RahulGandhi","VP","MauVila","GovKathyHochul","setPois","handleLanguageChange","name","checked","handleRegionChange","handlePoisChange","CssBaseline","AppBar","position","zIndex","drawer","Drawer","flexShrink","boxSizing","overflow","List","ListItem","button","ListItemIcon","ListItemText","primary","Accordion","AccordionSummary","expandIcon","AccordionDetails","FormControl","m","FormLabel","FormGroup","FormControlLabel","control","Checkbox","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.595472c2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { CardContent, Card, CardHeader, Grid, Typography, IconButton, CardActions, styled, IconButtonProps, Collapse, Avatar } from '@mui/material';\r\nimport ModeCommentIcon from '@mui/icons-material/ModeComment';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\nimport VerifiedIcon from '@mui/icons-material/Verified';\r\n\r\nconst MENTIONS = /@([a-z\\d_]+)/ig;\r\nconst HASHTAGS = /(^|\\s)#(\\w+)/gm;\r\nconst URLS = /(http|ftp|https):\\/\\/([\\w_-]+(?:(?:\\.[\\w_-]+)+))([\\w.,@?^=%&:\\/~+#-]*[\\w@?^=%&\\/~+#-])/gm;\r\n\r\n\r\ninterface ExpandMoreProps extends IconButtonProps {\r\n  expand: boolean;\r\n}\r\n\r\nconst ExpandMore = styled((props: ExpandMoreProps) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n  marginLeft: 'auto',\r\n  transition: theme.transitions.create('transform', {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\nexport default function Results(props: any) {\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  function showTweet(id: any) {\r\n    window.open(\"https://twitter.com/test/status/\" + id.toString());\r\n  }\r\n\r\n  function createCard(item: any) {\r\n\r\n    const date = new Date(item.tweet_date);\r\n    const dateString = date.toLocaleDateString() + ' ' + date.toLocaleTimeString();\r\n    var parts = item.tweet_text.split(\" \");\r\n    const country = item.country;\r\n\r\n    for (let i = 0; i < parts.length; i++) {\r\n      if (parts[i].match(MENTIONS)) {\r\n        parts[i] = <span> <a className=\"mention\" target=\"_blank\" key={parts[i] + item.id} href={`http://twitter.com/` + parts[i]}>{parts[i]}</a> </span>;\r\n      } else if (parts[i].match(HASHTAGS)) {\r\n        parts[i] = <span> <a className=\"hashtag\" target=\"_blank\" key={parts[i] + item.id} href={`http://twitter.com/` + parts[i]}>{parts[i]}</a> </span>;\r\n      } else if (parts[i].match(URLS)) {\r\n        parts[i] = <span> <a className=\"url\" target=\"_blank\" key={parts[i] + item.id} href={parts[i]}>{parts[i]}</a> </span>;\r\n      } else {\r\n        parts[i] = <span> {parts[i]} </span>\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Card key={item.id} sx={{ mt: 2, bgcolor: 'aliceblue' }} >\r\n        <CardHeader\r\n          title={\r\n            <div>\r\n              <span> { item.id } </span>\r\n              { item.verified ? <span> <VerifiedIcon color='success' fontSize='inherit'/> </span> : '' }\r\n            </div>\r\n          }\r\n          subheader={dateString}\r\n          action={\r\n            <IconButton aria-label=\"settings\">\r\n              <OpenInNewIcon onClick={() => showTweet(item.id)} />\r\n            </IconButton>\r\n          }\r\n          avatar={\r\n            <Avatar aria-label=\"avatar\">{item.tweet_text[0]}</Avatar>\r\n          }\r\n        />\r\n        <CardContent>\r\n          <Typography sx={{ mb: 1.5 }} color=\"text.primary\">\r\n            {parts}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions disableSpacing>\r\n          <IconButton aria-label=\"Comments\">\r\n            <ModeCommentIcon />\r\n          </IconButton>\r\n          <ExpandMore\r\n            expand={expanded}\r\n            onClick={handleExpandClick}\r\n            aria-expanded={expanded}\r\n            aria-label=\"show more\"\r\n          >\r\n            <ExpandMoreIcon />\r\n          </ExpandMore>\r\n        </CardActions>\r\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <Typography>\r\n              {country ? 'Country: ' + country : ''}\r\n            </Typography>\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      About {props.data.response?.numFound} results.\r\n      {\r\n        props.data.response?.docs?.map((item: any) => {\r\n          return createCard(item);\r\n        })\r\n      }\r\n    </Grid>\r\n  )\r\n}","import { CardContent, Card, Grid } from '@mui/material';\r\nimport { Bar, BarChart, CartesianGrid, Legend, Line, LineChart, Pie, PieChart, Tooltip, XAxis, YAxis } from 'recharts';\r\n\r\nexport default function Analytics(props: any) {\r\n\r\n  const data01 = [\r\n    {\r\n      \"name\": \"Group A\",\r\n      \"value\": 400\r\n    },\r\n    {\r\n      \"name\": \"Group B\",\r\n      \"value\": 300\r\n    }\r\n  ];\r\n  const data02 = [\r\n    {\r\n      \"name\": \"Group A\",\r\n      \"value\": 2400\r\n    },\r\n    {\r\n      \"name\": \"Group B\",\r\n      \"value\": 4567\r\n    }\r\n  ];\r\n  const data = [\r\n    {\r\n      \"name\": \"Page A\",\r\n      \"uv\": 4000,\r\n      \"pv\": 2400\r\n    },\r\n    {\r\n      \"name\": \"Page B\",\r\n      \"uv\": 3000,\r\n      \"pv\": 1398\r\n    }\r\n  ]\r\n  const data1 = [\r\n    {\r\n      \"name\": \"Page A\",\r\n      \"uv\": 4000,\r\n      \"pv\": 2400,\r\n      \"amt\": 2400\r\n    },\r\n    {\r\n      \"name\": \"Page B\",\r\n      \"uv\": 3000,\r\n      \"pv\": 1398,\r\n      \"amt\": 2210\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      Result analytics\r\n      <Card sx={{ mt: 2, bgcolor: 'ghostwhite' }}>\r\n        <CardContent>\r\n          <PieChart width={730} height={250}>\r\n            <Tooltip />\r\n            <Pie data={data01} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={50} fill=\"#8884d8\" />\r\n            <Pie data={data02} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" innerRadius={60} outerRadius={80} fill=\"#82ca9d\" label />\r\n          </PieChart>\r\n        </CardContent>\r\n      </Card>\r\n      <Card sx={{ mt: 2, bgcolor: 'ghostwhite', pt: 2 }}>\r\n        <BarChart width={730} height={250} data={data}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Bar dataKey=\"pv\" fill=\"#8884d8\" />\r\n          <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\r\n        </BarChart>\r\n      </Card>\r\n      <Card sx={{ mt: 2, bgcolor: 'ghostwhite', pt: 2 }}>\r\n        <LineChart width={730} height={250} data={data1}\r\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n      </Card>\r\n    </Grid>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Alert, Autocomplete, Box, Button, CircularProgress, Grid, Pagination, TextField, Toolbar, Typography } from '@mui/material';\r\nimport Results from './Results';\r\nimport Analytics from './Analytics';\r\n\r\n\r\nexport default function Search(props: any) {\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [data, setData] = React.useState<any | undefined>();\r\n  const [spinner, setSpinner] = React.useState(false);\r\n  const [page, setPage] = React.useState(1);\r\n  const [error, setError] = React.useState({\r\n    show: false,\r\n    message: \"\"\r\n  });\r\n\r\n  const sample: any[] = [];\r\n\r\n  const fetchResults = () => {\r\n    const start = page ? ((page - 1) * 10).toString() : \"0\"\r\n    console.log(start);\r\n\r\n    setData(undefined);\r\n    setSpinner(true);\r\n    setError({ ...error, show: false });\r\n\r\n    if (!inputValue) {\r\n      setSpinner(false);\r\n      console.log(\"Enter some details\");\r\n    } else {\r\n      const url = new URL(\"http://13.59.1.184:5000/api\");\r\n      const headers = {\r\n        'Content-Type': 'application/json'\r\n      }\r\n      const body = {\r\n        \"query\": inputValue,\r\n        \"start\": start ? start.toString() : \"0\",\r\n        \"pois\": Array(),\r\n        \"countries\": Array(),\r\n        \"languages\": Array()\r\n      }\r\n      createRequestBody(body);\r\n\r\n      fetch(url.toString(), {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        redirect: 'follow',\r\n        body: JSON.stringify(body),\r\n        headers: headers\r\n      })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n          setData(result);\r\n        })\r\n        .catch(error => {\r\n          setError({\r\n            show: true,\r\n            message: error.toString()\r\n          });\r\n          console.log(error);\r\n        })\r\n        .finally(() => {\r\n          setSpinner(false);\r\n        });\r\n    }\r\n  }\r\n\r\n  const createRequestBody = (body: any) => {\r\n    for (let key in props.languages) {\r\n      if (props.languages[key]) {\r\n        body.languages.push(key)\r\n      }\r\n    }\r\n    for (let key in props.countries) {\r\n      if (props.countries[key]) {\r\n        body.countries.push(key)\r\n      }\r\n    }\r\n    for (let key in props.pois) {\r\n      if (props.pois[key]) {\r\n        body.pois.push(key)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleKeyDown = (event: any) => {\r\n    if (event.key === \"Enter\") {\r\n      fetchResults();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchResults();\r\n  }, [page])\r\n\r\n  const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setPage(value);\r\n  }\r\n\r\n  const showProgress = () => {\r\n    if (spinner) {\r\n      return (\r\n        <Box sx={{ width: '100%', flex: 1, textAlign: 'center', mt: '200px' }}>\r\n          <div><CircularProgress /></div>\r\n          <div>Loading</div>\r\n        </Box>\r\n      )\r\n    } else {\r\n      return (\r\n        <Box sx={{ display: 'flex' }}>\r\n        </Box>\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderError = () => {\r\n    if (error.show) {\r\n      return (\r\n        <Alert sx={{ mx: 2 }} severity=\"error\">{error.message}</Alert>\r\n      )\r\n    } else {\r\n      return (\r\n        <div></div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderResults = () => {\r\n    if (data) {\r\n      return (\r\n        <Grid container xs={12}>\r\n          <Grid item padding={2} xs={6}>\r\n            <Results data={data}></Results>\r\n            <Pagination\r\n              count={Math.ceil(data?.response?.numFound / 10)}\r\n              showFirstButton\r\n              showLastButton\r\n              color=\"primary\"\r\n              page={page}\r\n              onChange={handlePageChange}\r\n              sx={{ marginLeft: \"25%\", marginTop: \"24px\" }} />\r\n          </Grid>\r\n          <Grid item padding={2} xs={6} sx={{ bgcolor: \"primary.disabled\" }}>\r\n            <Analytics\r\n              language={data.lang}\r\n              country={data.country}\r\n              hashtags={data.hashtags}\r\n              mentions={data.mentions}\r\n            ></Analytics>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      );\r\n    } else if (!spinner && !data && !error.show) {\r\n      return (\r\n        <Grid container xs={12}>\r\n          <Typography padding={2}>Begin search to see results.</Typography>\r\n        </Grid>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box component=\"main\" sx={{ flexGrow: 1, p: 0 }}>\r\n      <Toolbar />\r\n      <Grid container xs={12}>\r\n        <Grid item padding={2} xs={4}>\r\n          <Autocomplete\r\n            freeSolo\r\n            id=\"combo-box-demo\"\r\n            options={sample}\r\n            onKeyDown={handleKeyDown}\r\n            onInputChange={(event, newInputValue) => {\r\n              setInputValue(newInputValue);\r\n            }}\r\n            sx={{ width: '100%' }}\r\n            renderInput={(params) => <TextField {...params} label=\"Search\" />}\r\n          />\r\n        </Grid>\r\n        <Grid item padding={2} xs={1.5}>\r\n          <Button variant=\"contained\" sx={{ width: '100%', height: '100%' }} onClick={() => { fetchResults() }}>\r\n            Search\r\n          </Button>\r\n        </Grid>\r\n        <Grid item padding={2} xs={6.5}></Grid>\r\n        {renderError()}\r\n        {renderResults()}\r\n      </Grid>\r\n      {showProgress()}\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Accordion, AccordionDetails, AccordionSummary, AppBar, Box, Checkbox, CssBaseline, Drawer, FormControl, FormControlLabel, FormGroup, FormLabel, List, ListItem, ListItemIcon, ListItemText, Toolbar, Typography } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport QueryStatsIcon from '@mui/icons-material/QueryStats';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport './App.css';\r\nimport Search from './components/Search';\r\nimport { useEffect } from 'react';\r\n\r\nconst drawerWidth = 300;\r\n\r\nexport default function App() {\r\n\r\n  const [languages, setLanguage] = React.useState({\r\n    english: false,\r\n    hindi: false,\r\n    spanish: false,\r\n  });\r\n  const [countries, setRegion] = React.useState({\r\n    usa: false,\r\n    india: false,\r\n    mexico: false\r\n  });\r\n  const [pois, setPois] = React.useState({\r\n    SSalud_mx: false,\r\n    CDCgov: false,\r\n    narendramodi: false,\r\n    POTUS: false,\r\n    marcorubio: false,\r\n    JoeBiden: false,\r\n    ShashiTharoor: false,\r\n    SenTedCruz: false,\r\n    lopezobrador_: false,\r\n    SenSchumer: false,\r\n    EnriqueAlfaroR: false,\r\n    GobiernoMX: false,\r\n    alfredodelmazo: false,\r\n    osoriochong: false,\r\n    AmitShah: false,\r\n    Jaime_BonillaV: false,\r\n    Claudiashein: false,\r\n    ArvindKejriwal: false,\r\n    mansukhmandviya: false,\r\n    MoHFW_INDIA: false,\r\n    RandPaul: false,\r\n    HillaryClinton: false,\r\n    AyushmanNHA: false,\r\n    HLGatell: false,\r\n    BarackObama: false,\r\n    PMOIndia: false,\r\n    DrTedros: false,\r\n    KamalaHarris: false,\r\n    rashtrapatibhvn: false,\r\n    HHSGov: false,\r\n    myogiadityanath: false,\r\n    SSaludCdMx: false,\r\n    dremilyportermd: false,\r\n    WHO: false,\r\n    GovRonDeSantis: false,\r\n    RahulGandhi: false,\r\n    VP: false,\r\n    MauVila: false,\r\n    GovKathyHochul: false,\r\n  });\r\n\r\n  const poisList = [\"SSalud_mx\",\r\n    \"CDCgov\",\r\n    \"narendramodi\",\r\n    \"POTUS\",\r\n    \"marcorubio\",\r\n    \"JoeBiden\",\r\n    \"ShashiTharoor\",\r\n    \"SenTedCruz\",\r\n    \"lopezobrador_\",\r\n    \"SenSchumer\",\r\n    \"EnriqueAlfaroR\",\r\n    \"GobiernoMX\",\r\n    \"alfredodelmazo\",\r\n    \"osoriochong\",\r\n    \"AmitShah\",\r\n    \"Jaime_BonillaV\",\r\n    \"Claudiashein\",\r\n    \"ArvindKejriwal\",\r\n    \"mansukhmandviya\",\r\n    \"MoHFW_INDIA\",\r\n    \"RandPaul\",\r\n    \"HillaryClinton\",\r\n    \"AyushmanNHA\",\r\n    \"HLGatell\",\r\n    \"BarackObama\",\r\n    \"PMOIndia\",\r\n    \"DrTedros\",\r\n    \"KamalaHarris\",\r\n    \"rashtrapatibhvn\",\r\n    \"HHSGov\",\r\n    \"myogiadityanath\",\r\n    \"SSaludCdMx\",\r\n    \"dremilyportermd\",\r\n    \"WHO\",\r\n    \"GovRonDeSantis\",\r\n    \"RahulGandhi\",\r\n    \"VP\",\r\n    \"MauVila\",\r\n    \"GovKathyHochul\"];\r\n\r\n  const handleLanguageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setLanguage({\r\n      ...languages,\r\n      [event.target.name]: event.target.checked,\r\n    })\r\n  };\r\n\r\n  const handleRegionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRegion({\r\n      ...countries,\r\n      [event.target.name]: event.target.checked,\r\n    })\r\n  };\r\n\r\n  const handlePoisChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPois({\r\n      ...pois,\r\n      [event.target.name]: event.target.checked,\r\n    })\r\n  };\r\n\r\n  // const getPoiValue = (name: string) => {\r\n  //   if (pois && pois[name]) {\r\n  //     return pois[name];\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex' }}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            COVID Sentiment Analysis\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        sx={{\r\n          width: drawerWidth,\r\n          flexShrink: 0,\r\n          [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box' },\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <Box sx={{ overflow: 'auto' }}>\r\n          <List>\r\n            <ListItem button key={\"search\"}>\r\n              <ListItemIcon>\r\n                <SearchIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Search tweets\"} />\r\n            </ListItem>\r\n            <ListItem>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Typography>Filters</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <FormControl sx={{ m: 1 }} component=\"fieldset\" variant=\"standard\">\r\n                    <FormLabel component=\"legend\">Language</FormLabel>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={languages.english} onChange={handleLanguageChange} name=\"english\" />\r\n                        }\r\n                        label=\"English\"\r\n                      />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={languages.hindi} onChange={handleLanguageChange} name=\"hindi\" />\r\n                        }\r\n                        label=\"Hindi\"\r\n                      />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={languages.spanish} onChange={handleLanguageChange} name=\"spanish\" />\r\n                        }\r\n                        label=\"Spanish\"\r\n                      />\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                  <FormControl sx={{ m: 1 }} component=\"fieldset\" variant=\"standard\">\r\n                    <FormLabel component=\"legend\">Region</FormLabel>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={countries.usa} onChange={handleRegionChange} name=\"usa\" />\r\n                        }\r\n                        label=\"USA\"\r\n                      />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={countries.india} onChange={handleRegionChange} name=\"india\" />\r\n                        }\r\n                        label=\"India\"\r\n                      />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={countries.mexico} onChange={handleRegionChange} name=\"mexico\" />\r\n                        }\r\n                        label=\"Mexico\"\r\n                      />\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                  <FormControl sx={{ m: 1 }} component=\"fieldset\" variant=\"standard\">\r\n                    <FormLabel component=\"legend\">Person of Interest</FormLabel>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.AmitShah} onChange={handlePoisChange} name=\"AmitShah\" />\r\n                        }\r\n                        label=\"AmitShah\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.ArvindKejriwal} onChange={handlePoisChange} name=\"ArvindKejriwal\" />\r\n                        }\r\n                        label=\"ArvindKejriwal\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.AyushmanNHA} onChange={handlePoisChange} name=\"AyushmanNHA\" />\r\n                        }\r\n                        label=\"AyushmanNHA\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.BarackObama} onChange={handlePoisChange} name=\"BarackObama\" />\r\n                        }\r\n                        label=\"BarackObama\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.CDCgov} onChange={handlePoisChange} name=\"CDCgov\" />\r\n                        }\r\n                        label=\"CDCgov\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.Claudiashein} onChange={handlePoisChange} name=\"Claudiashein\" />\r\n                        }\r\n                        label=\"Claudiashein\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.DrTedros} onChange={handlePoisChange} name=\"DrTedros\" />\r\n                        }\r\n                        label=\"DrTedros\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.EnriqueAlfaroR} onChange={handlePoisChange} name=\"EnriqueAlfaroR\" />\r\n                        }\r\n                        label=\"EnriqueAlfaroR\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.GobiernoMX} onChange={handlePoisChange} name=\"GobiernoMX\" />\r\n                        }\r\n                        label=\"GobiernoMX\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.GovKathyHochul} onChange={handlePoisChange} name=\"GovKathyHochul\" />\r\n                        }\r\n                        label=\"GovKathyHochul\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.GovRonDeSantis} onChange={handlePoisChange} name=\"GovRonDeSantis\" />\r\n                        }\r\n                        label=\"GovRonDeSantis\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.HHSGov} onChange={handlePoisChange} name=\"HHSGov\" />\r\n                        }\r\n                        label=\"HHSGov\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.HLGatell} onChange={handlePoisChange} name=\"HLGatell\" />\r\n                        }\r\n                        label=\"HLGatell\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.HillaryClinton} onChange={handlePoisChange} name=\"HillaryClinton\" />\r\n                        }\r\n                        label=\"HillaryClinton\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.Jaime_BonillaV} onChange={handlePoisChange} name=\"Jaime_BonillaV\" />\r\n                        }\r\n                        label=\"Jaime_BonillaV\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.JoeBiden} onChange={handlePoisChange} name=\"JoeBiden\" />\r\n                        }\r\n                        label=\"JoeBiden\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.KamalaHarris} onChange={handlePoisChange} name=\"KamalaHarris\" />\r\n                        }\r\n                        label=\"KamalaHarris\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.MauVila} onChange={handlePoisChange} name=\"MauVila\" />\r\n                        }\r\n                        label=\"MauVila\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.MoHFW_INDIA} onChange={handlePoisChange} name=\"MoHFW_INDIA\" />\r\n                        }\r\n                        label=\"MoHFW_INDIA\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.PMOIndia} onChange={handlePoisChange} name=\"PMOIndia\" />\r\n                        }\r\n                        label=\"PMOIndia\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.POTUS} onChange={handlePoisChange} name=\"POTUS\" />\r\n                        }\r\n                        label=\"POTUS\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.RahulGandhi} onChange={handlePoisChange} name=\"RahulGandhi\" />\r\n                        }\r\n                        label=\"RahulGandhi\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.RandPaul} onChange={handlePoisChange} name=\"RandPaul\" />\r\n                        }\r\n                        label=\"RandPaul\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.SSaludCdMx} onChange={handlePoisChange} name=\"SSaludCdMx\" />\r\n                        }\r\n                        label=\"SSaludCdMx\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.SSalud_mx} onChange={handlePoisChange} name=\"SSalud_mx\" />\r\n                        }\r\n                        label=\"SSalud_mx\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.SenSchumer} onChange={handlePoisChange} name=\"SenSchumer\" />\r\n                        }\r\n                        label=\"SenSchumer\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.SenTedCruz} onChange={handlePoisChange} name=\"SenTedCruz\" />\r\n                        }\r\n                        label=\"SenTedCruz\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.ShashiTharoor} onChange={handlePoisChange} name=\"ShashiTharoor\" />\r\n                        }\r\n                        label=\"ShashiTharoor\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.VP} onChange={handlePoisChange} name=\"VP\" />\r\n                        }\r\n                        label=\"VP\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.WHO} onChange={handlePoisChange} name=\"WHO\" />\r\n                        }\r\n                        label=\"WHO\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.alfredodelmazo} onChange={handlePoisChange} name=\"alfredodelmazo\" />\r\n                        }\r\n                        label=\"alfredodelmazo\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.dremilyportermd} onChange={handlePoisChange} name=\"dremilyportermd\" />\r\n                        }\r\n                        label=\"dremilyportermd\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.lopezobrador_} onChange={handlePoisChange} name=\"lopezobrador_\" />\r\n                        }\r\n                        label=\"lopezobrador_\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.mansukhmandviya} onChange={handlePoisChange} name=\"mansukhmandviya\" />\r\n                        }\r\n                        label=\"mansukhmandviya\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.marcorubio} onChange={handlePoisChange} name=\"marcorubio\" />\r\n                        }\r\n                        label=\"marcorubio\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.myogiadityanath} onChange={handlePoisChange} name=\"myogiadityanath\" />\r\n                        }\r\n                        label=\"myogiadityanath\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.narendramodi} onChange={handlePoisChange} name=\"narendramodi\" />\r\n                        }\r\n                        label=\"narendramodi\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.osoriochong} onChange={handlePoisChange} name=\"osoriochong\" />\r\n                        }\r\n                        label=\"osoriochong\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox checked={pois.rashtrapatibhvn} onChange={handlePoisChange} name=\"rashtrapatibhvn\" />\r\n                        }\r\n                        label=\"rashtrapatibhvn\"\r\n                      />\r\n                    </FormGroup>\r\n\r\n                  </FormControl>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            </ListItem>\r\n            <ListItem button key={\"stats\"}>\r\n              <ListItemIcon>\r\n                <QueryStatsIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Corpus stats\"} />\r\n            </ListItem>\r\n          </List>\r\n        </Box>\r\n      </Drawer>\r\n\r\n      <Search\r\n        languages={languages}\r\n        countries={countries}\r\n        pois={pois}\r\n      ></Search>\r\n    </Box >\r\n  );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}