{"version":3,"sources":["components/Results.tsx","components/Analytics.tsx","components/Search.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MENTIONS","HASHTAGS","URLS","ExpandMore","styled","props","expand","other","IconButton","theme","transform","marginLeft","transition","transitions","create","duration","shortest","Results","React","useState","expanded","setExpanded","handleExpandClick","createCard","item","date","Date","tweet_date","dateString","toLocaleDateString","toLocaleTimeString","parts","tweet_text","split","country","i","length","match","className","target","href","id","Card","sx","mt","bgcolor","CardHeader","title","verified","color","fontSize","subheader","action","onClick","window","open","toString","avatar","Avatar","CardContent","Typography","mb","CardActions","disableSpacing","Collapse","in","timeout","unmountOnExit","Grid","xs","data","response","numFound","docs","map","Analytics","tweet_hashtags","this","Component","Search","sample","fetchResults","bind","handleKeyDown","setState","spinner","state","inputValue","url","URL","searchParams","append","fetch","method","mode","redirect","then","json","result","catch","error","console","log","finally","event","key","Box","component","flexGrow","p","Toolbar","container","padding","Autocomplete","freeSolo","options","onKeyDown","onChange","newValue","value","onInputChange","newInputValue","width","renderInput","params","TextField","label","Button","variant","height","flex","textAlign","CircularProgress","display","showProgress","App","CssBaseline","AppBar","position","zIndex","drawer","Drawer","flexShrink","boxSizing","overflow","List","text","index","ListItem","button","ListItemIcon","ListItemText","primary","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.531de401.chunk.js","sourcesContent":["import React from 'react';\r\nimport { CardContent, Card, CardHeader, Grid, Typography, IconButton, CardActions, styled, IconButtonProps, Collapse, Avatar } from '@mui/material';\r\nimport ModeCommentIcon from '@mui/icons-material/ModeComment';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\nimport VerifiedIcon from '@mui/icons-material/Verified';\r\n\r\nconst MENTIONS = /@([a-z\\d_]+)/ig;\r\nconst HASHTAGS = /(^|\\s)#(\\w+)/gm;\r\nconst URLS = /(http|ftp|https):\\/\\/([\\w_-]+(?:(?:\\.[\\w_-]+)+))([\\w.,@?^=%&:\\/~+#-]*[\\w@?^=%&\\/~+#-])/gm;\r\n\r\n\r\ninterface ExpandMoreProps extends IconButtonProps {\r\n  expand: boolean;\r\n}\r\n\r\nconst ExpandMore = styled((props: ExpandMoreProps) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n  marginLeft: 'auto',\r\n  transition: theme.transitions.create('transform', {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\nexport default function Results(props: any) {\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  function showTweet(id: any) {\r\n    window.open(\"https://twitter.com/test/status/\" + id.toString());\r\n  }\r\n\r\n  function createCard(item: any) {\r\n\r\n    const date = new Date(item.tweet_date);\r\n    const dateString = date.toLocaleDateString() + ' ' + date.toLocaleTimeString();\r\n    var parts = item.tweet_text.split(\" \");\r\n    const country = item.country;\r\n\r\n    for (let i = 0; i < parts.length; i++) {\r\n      if (parts[i].match(MENTIONS)) {\r\n        parts[i] = <span> <a className=\"mention\" target=\"_blank\" key={parts[i] + item.id} href={`http://twitter.com/` + parts[i]}>{parts[i]}</a> </span>;\r\n      } else if (parts[i].match(HASHTAGS)) {\r\n        parts[i] = <span> <a className=\"hashtag\" target=\"_blank\" key={parts[i] + item.id} href={`http://twitter.com/` + parts[i]}>{parts[i]}</a> </span>;\r\n      } else if (parts[i].match(URLS)) {\r\n        parts[i] = <span> <a className=\"url\" target=\"_blank\" key={parts[i] + item.id} href={parts[i]}>{parts[i]}</a> </span>;\r\n      } else {\r\n        parts[i] = <span> {parts[i]} </span>\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Card key={item.id} sx={{ mt: 2, bgcolor: 'aliceblue' }} >\r\n        <CardHeader\r\n          title={\r\n            <div>\r\n              <span> { item.id } </span>\r\n              { item.verified ? <span> <VerifiedIcon color='success' fontSize='inherit'/> </span> : '' }\r\n            </div>\r\n          }\r\n          subheader={dateString}\r\n          action={\r\n            <IconButton aria-label=\"settings\">\r\n              <OpenInNewIcon onClick={() => showTweet(item.id)} />\r\n            </IconButton>\r\n          }\r\n          avatar={\r\n            <Avatar aria-label=\"avatar\">{item.tweet_text[0]}</Avatar>\r\n          }\r\n        />\r\n        <CardContent>\r\n          <Typography sx={{ mb: 1.5 }} color=\"text.primary\">\r\n            {parts}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions disableSpacing>\r\n          <IconButton aria-label=\"Comments\">\r\n            <ModeCommentIcon />\r\n          </IconButton>\r\n          <ExpandMore\r\n            expand={expanded}\r\n            onClick={handleExpandClick}\r\n            aria-expanded={expanded}\r\n            aria-label=\"show more\"\r\n          >\r\n            <ExpandMoreIcon />\r\n          </ExpandMore>\r\n        </CardActions>\r\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <Typography>\r\n              {country ? 'Country: ' + country : ''}\r\n            </Typography>\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      About {props.data.response?.numFound} results.\r\n      {\r\n        props.data.response?.docs?.map((item: any) => {\r\n          return createCard(item);\r\n        })\r\n      }\r\n    </Grid>\r\n  )\r\n}","import React from 'react';\r\nimport { CardContent, Card, CardHeader, Grid, Typography } from '@mui/material';\r\n\r\nclass Analytics extends React.Component<{ data: any }, {}> {\r\n\r\n  createCard(item: any) {\r\n    return (\r\n      <Card key={item.id} sx={{ mt: 2, bgcolor: 'aliceblue' }}>\r\n        <CardHeader\r\n          title={item.id}\r\n          subheader={item.tweet_date}\r\n        />\r\n        <CardContent>\r\n          <Typography sx={{ mb: 1.5 }} color=\"text.primary\">\r\n            {item.tweet_text}\r\n          </Typography>\r\n          <Typography sx={{ mb: 1.5 }} color=\"text.primary\">\r\n            {item.tweet_hashtags}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid item xs={12}>\r\n        Analytics\r\n        {\r\n          this.props.data.response?.docs?.map((item: any) => {\r\n            return this.createCard(item);\r\n          })\r\n        }\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Analytics;","import React from 'react';\r\nimport { Autocomplete, Box, Button, CircularProgress, Grid, TextField, Toolbar, Typography } from '@mui/material';\r\nimport Results from './Results';\r\nimport Analytics from './Analytics';\r\n\r\nclass Search extends React.Component<{}, { value: string | null, inputValue: string, data: any, spinner: boolean }> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.fetchResults = this.fetchResults.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.setState({ spinner: false });\r\n  }\r\n\r\n  sample = []\r\n\r\n  fetchResults() {\r\n    this.setState({\r\n      data: null,\r\n      spinner: true\r\n    });\r\n    if (!this.state?.inputValue) {\r\n      this.setState({ spinner: false });\r\n      console.log(\"Enter some details\");\r\n    } else {\r\n      const url = new URL(\"http://172.31.17.108:9999/api\");\r\n      url.searchParams.append(\"query\", this.state.inputValue);\r\n      fetch(url.toString(), {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        redirect: 'follow',\r\n      })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n          this.setState({\r\n            data: result\r\n          })\r\n        })\r\n        .catch(error => {\r\n          console.log('error', error)\r\n        })\r\n        .finally(() => {\r\n          this.setState({ spinner: false });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleKeyDown(event: any) {\r\n    if (event.key === \"Enter\") {\r\n      this.fetchResults();\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const showProgress = () => {\r\n      if (this.state?.spinner) {\r\n        return (\r\n          <Box sx={{ width: '100%', flex: 1, textAlign: 'center', mt: '200px' }}>\r\n            <div><CircularProgress /></div>\r\n            <div>Loading</div>\r\n          </Box>\r\n        )\r\n      } else {\r\n        return (\r\n          <Box sx={{ display: 'flex' }}>\r\n          </Box>\r\n        )\r\n      }\r\n    }\r\n\r\n    const renderResults = () => {\r\n      if (this.state && this.state.data) {\r\n        return (\r\n          <Grid container xs={12}>\r\n            <Grid item padding={2} xs={6}>\r\n              <Results data={this.state.data}></Results>\r\n            </Grid>\r\n            <Grid item padding={2} xs={6} sx={{ bgcolor: \"primary.disabled\" }}>\r\n              <Analytics data={this.state.data}></Analytics>\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n      } else if (!this.state || (this.state && !this.state.spinner && !this.state.data)) {\r\n        return (\r\n          <Grid container xs={12}>\r\n            <Typography padding={2}>Begin search to see results.</Typography>\r\n          </Grid>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Box component=\"main\" sx={{ flexGrow: 1, p: 0 }}>\r\n        <Toolbar />\r\n        <Grid container xs={12}>\r\n          <Grid item padding={2} xs={4}>\r\n            <Autocomplete\r\n              freeSolo\r\n              id=\"combo-box-demo\"\r\n              options={this.sample}\r\n              onKeyDown={this.handleKeyDown}\r\n              onChange={(event: any, newValue: string | null) => {\r\n                this.setState({ value: newValue });\r\n              }}\r\n              onInputChange={(event, newInputValue) => {\r\n                this.setState({ inputValue: newInputValue });\r\n              }}\r\n              sx={{ width: '100%' }}\r\n              renderInput={(params) => <TextField {...params} label=\"Search\" />}\r\n            />\r\n          </Grid>\r\n          <Grid item padding={2} xs={1.5}>\r\n            <Button variant=\"contained\" sx={{ width: '100%', height: '100%' }} onClick={() => { this.fetchResults() }}>\r\n              Search\r\n            </Button>\r\n          </Grid>\r\n          <Grid item padding={2} xs={6.5}></Grid>\r\n          {renderResults()}\r\n        </Grid>\r\n        {showProgress()}\r\n      </Box>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search;","import React from 'react';\nimport { AppBar, Box, CssBaseline, Drawer, List, ListItem, ListItemIcon, ListItemText, Toolbar, Typography } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport QueryStatsIcon from '@mui/icons-material/QueryStats';\nimport './App.css';\nimport Search from './components/Search';\n\nconst drawerWidth = 240;\n\nclass App extends React.Component {\n\n  sample = []\n\n  render() {\n    return (\n      <Box sx={{ display: 'flex' }}>\n        <CssBaseline />\n        <AppBar position=\"fixed\" sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}>\n          <Toolbar>\n            {/* <IconButton\n              size=\"large\"\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n              sx={{ mr: 2 }}\n            >\n              <MenuIcon />\n            </IconButton> */}\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              COVID Sentiment Analysis\n            </Typography>\n          </Toolbar>\n        </AppBar>\n\n        <Drawer\n          variant=\"permanent\"\n          sx={{\n            width: drawerWidth,\n            flexShrink: 0,\n            [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box' },\n          }}\n        >\n          <Toolbar />\n          <Box sx={{ overflow: 'auto' }}>\n            <List>\n              {['Search Tweets', 'Stats'].map((text, index) => (\n                <ListItem button key={text}>\n                  <ListItemIcon>\n                    {index % 2 === 0 ? <SearchIcon /> : <QueryStatsIcon />}\n                  </ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              ))}\n            </List>\n          </Box>\n        </Drawer>\n\n        <Search></Search>\n      </Box >\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}